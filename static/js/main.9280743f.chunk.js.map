{"version":3,"sources":["components/aboutReactJsComponent.jsx","assets/images/folderAndFileStructure.png","assets/images/createReactAppCommand.png","assets/images/myFirstReactAppNpmStartCommand.png","assets/images/myFirstReactAppUI.png","components/firstReactAppComponent.jsx","assets/images/appStructure.png","assets/images/appComponent.png","assets/images/appRendering.png","components/howReactWorksComponent.jsx","components/functionComponent.jsx","components/classComponent.jsx","components/stateAndPropsComponent.jsx","assets/constantFiles/appDataConstants.jsx","components/bestCodingPracticesComponent.jsx","components/reactFundamentalsComponent.jsx","components/eventHandlingComponent.jsx","components/passingDataComponent.jsx","components/feedbackComponent.jsx","components/jsxComponent.jsx","assets/images/helloWorld_Code.png","assets/images/helloWorld_UI.png","assets/downloadFiles/custom-app.zip","assets/constantFiles/routeConstants.jsx","components/helloWorldComponent.jsx","components/reactLifecycleComponent.jsx","components/homeComponent.jsx","Route.jsx","components/appMenuComponent.jsx","components/appFooterComponent.jsx","assets/images/logo/reactStreetLogo.png","components/appHeaderComponent.jsx","assets/constantFiles/appConstants.jsx","App.js","reportWebVitals.js","index.js"],"names":["AboutReactJsComponent","className","href","target","rel","Component","FirstReactAppComponent","src","createReactAppCommand","width","alt","myFirstReactAppNpmStartCommand","myFirstReactAppUI","folderAndFileStructureImage","HowReactWorksComponent","appStructure","appComponent","appRendering","FunctionComponent","readOnly","value","ClassComponent","StateAndPropsComponent","state","msg","this","bestPracticeContent","Heading","Description","reactFundamentalsContent","BestCodingPracticesComponent","map","content","ReactFundamentalsComponent","EventHandlingComponent","counter","buttonType","IncrementCounter","setState","DecrementCounter","printButtonType","_buttonType","formatCount","type","onClick","style","PassingDataBetweenComponent","ParentFunctionComponent","ChildFunctionComponent","parentText","ParentClassComponent","ChildClassComponent","props","C2PParentClassComponent","dataFromChild","getDataFromChildCallBackFunction","dtFromChild","parentCallBack","C2PChildClassComponent","sendDataToParent","FeedBackComponent","FeedBackData","feedbackData","feedData","userName","userFeedback","feedbackCount","JSXComponent","routeData","routeKey","routePath","routeLinkText","routeLinkDescription","routeComponent","helloWorld_Code","customApp","download","helloWorld_UI","React","HomeComponent","id","_item","AppRoute","path","component","exact","AppMenuComponent","hideMenuList","_routeLinkText","list_container","document","getElementById","classList","add","remove","body","scrollTop","documentElement","ActiveRouteText","to","activeClassName","AppFooterComponent","getFeedback","placeholder","maxLength","buildInfo","buildMajor","buildMinor","buildRevision","buildTag","AppHeaderComponent","themePurple","themePurple_card_bgc","themePurple_card_bc","themeGreen","themeGreen_card_bgc","themeGreen_card_bc","themeOrangeRed","themeOrangeRed_card_bgc","themeOrangeRed_card_bc","themeHotPink","themeHotPink_card_bgc","themeHotPink_card_bc","setTheme","event","_theme","setProperty","reactStreetLogo","App","activeRouteLinkText","getActiveRouteLinkText","_newText","changeCss","helper_div","contains","menuDiv","sticky","offsetTop","addEventListener","window","pageYOffset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9280743f.chunk.js","sourcesContent":["import {Component,React} from 'react'\r\n\r\n \r\nexport class AboutReactJsComponent extends Component{\r\n    render(){\r\n        return(\r\n          <div>\r\n              {/* <h4 style={{ \"text-align\":'center' }} > This is the 'Hello React' application.  </h4> */}\r\n                <h4 className=\"content-heading\"> About ReactJs </h4> \r\n                <p> \r\n                <span className=\"code-cursor\"> &#187; </span>  <code> React </code> is a JavaScript library for building user interface.   <br />\r\n                <span className=\"code-cursor\"> &#187; </span>  <code> React </code>  is used to build single page applications.   <br />  \r\n                <span className=\"code-cursor\"> &#187; </span>  <code> React </code>  is rich in terms of reusability.\r\n                </p>\r\n                <p>  Reference Link:  <a href=\"https://reactjs.org/\" target=\"_blank\" rel=\"noreferrer\"> ReactJs</a>  <br />\r\n                  <small> \r\n                    (check out the link to get more info about ReactJs and to learn basic concepts. Anyhow this site also covers some important concepts such that you can start with React.)\r\n                  </small>\r\n                </p>\r\n                <br /> \r\n\r\n                <h4 className=\"content-heading\"> Why ReactJs? </h4> \r\n                <p> \r\n                <code> React </code> is very beneficial in terms of rendering, understandability, performance and manageability.\r\n                </p>\r\n\r\n                <p> \r\n                <span className=\"code-cursor\"> &#187; </span>  <code> Virtual DOM </code>:\r\n                  What is DOM? DOM stands for <code> Document Object Model</code>. As name says; \r\n                  A Model which holds all the Objects of all the elements of an HTML document.\r\n                  So, this DOM gives a power to JavaScript such that it can access and change all the HTML elements. \r\n                  Same logic is being used in <code> React </code>, but here we have Virtual DOM, which helps in fast rendering. \r\n                  How? As application loads, a DOM gets created, Traditionally if any changes happens to HTML element, accordingly full DOM gets updated but \r\n                  in the case of React it only updates the required portion rest of the DOM remains same.    <br />\r\n                <span className=\"code-cursor\"> &#187; </span>  <code> Reusable Components </code>:  <code> React </code> has a ability to have many small components which helps to modular programming and enhance the reusability.   <br />  \r\n                <span className=\"code-cursor\"> &#187; </span>  <code> Traditional JavaScript </code>: <code> React </code> uses traditional JavaScript hence it is easy to learn but its recommendable to use <code> JSX </code> which is advanced version of JavaScript.\r\n                </p>\r\n                <br /> <br />\r\n          </div>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/folderAndFileStructure.60f135c5.png\";","export default __webpack_public_path__ + \"static/media/createReactAppCommand.a8c8469b.png\";","export default __webpack_public_path__ + \"static/media/myFirstReactAppNpmStartCommand.acf78560.png\";","export default __webpack_public_path__ + \"static/media/myFirstReactAppUI.7ca28d10.png\";","import {Component,React} from 'react';\r\n\r\nimport folderAndFileStructureImage from '../assets/images/folderAndFileStructure.png';\r\nimport createReactAppCommand from '../assets/images/createReactAppCommand.png';\r\nimport myFirstReactAppNpmStartCommand from '../assets/images/myFirstReactAppNpmStartCommand.png';\r\nimport myFirstReactAppUI from  '../assets/images/myFirstReactAppUI.png';\r\n \r\n \r\nexport class FirstReactAppComponent extends Component{\r\n\r\n    render(){\r\n\r\n        return(\r\n      \r\n        <div>  \r\n            <div>\r\n\r\n                <h4 className=\"content-heading\"> Prerequisites </h4> \r\n                <p> Before stepping into React there are some prerequisites that needs to be done prior.</p> \r\n\r\n                <p><span className=\"code-cursor\"> &#187; </span> <b> NodeJs and npm :  </b>\r\n                 Basically we need only <code> npm (Node Package Manager)</code> or any other package manager. NodeJs is required when we do work with Server side coding.\r\n                 But no harm to install NodeJs as this contains NPM too which we are actually looking for.\r\n                </p>\r\n                <p>  Check out this link to get more about nodejs and installation setup :\r\n                 <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noreferrer\"> nodejs</a> <br />\r\n                </p>\r\n\r\n                <p>  <code> npm (Node Package Manager)</code> is repository for react packages. These packages helps to build the React Application.</p>\r\n                \r\n                \r\n                <p>  <span className=\"code-cursor\"> &#187; </span> <b> IDE (Integrated Development Environment) :  </b> We can use any IDE which supports reactJs development. Here we are using light weighted IDE <a href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"noreferrer\">VS Code</a>.\r\n                <br /><small> (Once you install the VS Code, do add these extensions: Simple React Snippets, Prettier - Code formatter) </small>\r\n                 </p> \r\n\r\n                <p>  <span className=\"code-cursor\"> &#187; </span> <b> Code Repository :  </b> Although it's an optional but we would recommend to use it. Any code repo will work with VS Code. \r\n                     Code repositories literally help us to do track the work and secure the storage damage.\r\n                 </p>\r\n                <br /> \r\n                \r\n                \r\n                <h4 className=\"content-heading\"> Let's begin with 'First React Application' </h4> \r\n                \r\n                <p> Once you have done all the prerequisites then we are good to start with creating our 'First React Application'. <br />\r\n                <strong className=\"theme-color-text\">  As we are new in the React so we will use one helper npm package which will help us to create a basic React Application along with all the required elements. \r\n                Once will get to know about the basic requirements of React App then we should be able to create it without help of this package.\r\n                </strong>\r\n                </p>\r\n\r\n                <p> <span className=\"code-cursor\"> &#187; </span> Let's install <a href=\"https://www.npmjs.com/package/create-react-app\" target=\"_blank\" rel=\"noreferrer\"> create-react-app</a>  package : \r\n                  Simply open cmd and type - <code> npm install -g create-react-app</code> \r\n                  <small> (visit for any guidance : <a href=\"https://reactjs.org/docs/create-a-new-react-app.html\" target=\"_blank\" rel=\"noreferrer\"> create-a-new-react-app</a>) </small>\r\n                </p>\r\n\r\n                <p>  <span className=\"code-cursor\"> &#187; </span>  Once above package is installed we are good to start with our first application.\r\n                Go to the directory where you want to create the new application and open the cmd for the same directory and execute below commands one by one:\r\n                <br /> <br />\r\n                  <span>\r\n                    <code> create-react-app my-first-react-app</code>  <br />\r\n                    <code> cd my-first-react-app</code>  <br />\r\n                    <code> npm start</code>  <br /> <br />\r\n                  </span>\r\n\r\n                  <span className=\"code-cursor\"> &#187; </span>  That is it! Now newly created react app (my-first-react-app) would start running on the 3000 port. <a href=\"http://localhost:3000\" target=\"_blank\" rel=\"noreferrer\"> localhost:3000</a> \r\n                 </p>\r\n               \r\n\r\n                <h5 className=\"content-heading\"> Executing Commands: </h5> \r\n\r\n                Creating 'my-first-react-app' app using <code> create-react-app </code> package:  <br /> \r\n                <img src={createReactAppCommand} width=\"60%\" alt=\"Create React App Command\" /> <br /> <br /> \r\n\r\n                Running 'my-first-react-app' app using <code> npm start </code> <br /> \r\n                <img src={myFirstReactAppNpmStartCommand} width=\"60%\" alt=\"My First React App Npm Start Command\" />\r\n                \r\n                <br /> <br /> \r\n                <h5 className=\"content-heading\"> App UI: <a href=\"http://localhost:3000\" target=\"_blank\" rel=\"noreferrer\"> localhost:3000</a>  </h5> \r\n                <img src={myFirstReactAppUI} width=\"60%\" alt=\"My First React App UI\" /> \r\n                \r\n\r\n                <br /> <br /> <br /> \r\n                <h4 className=\"content-heading\"> Useful Commands </h4> \r\n                <p>  \r\n                  <span className=\"code-cursor\"> &#187; </span> \r\n                  <code> node -v </code> and  <code> npm -v </code> :\r\n                  To check the version of installed node and npm on your machine. \r\n\r\n                  <br />\r\n                  <span className=\"code-cursor\"> &#187; </span> \r\n                  <code> create-react-app my-first-react-app</code> :\r\n                  This command will create the new application with the name 'my-first-react-app' on the executed directory.\r\n\r\n                  <br />\r\n                  <span className=\"code-cursor\"> &#187; </span> \r\n                  <code> npm install</code> :\r\n                  This command helps to install all the packages on the executed directory. It does install all those packages which are mentioned in the respective <code> package.json </code> file.\r\n\r\n                  <br />\r\n                  <span className=\"code-cursor\"> &#187; </span> \r\n                  <code> npm start</code> :\r\n                  To run the application we use this command and execute on the solution root directory.\r\n                </p> \r\n \r\n                <i>  <b> Note : </b> We can also create ReactJs app without  <code> create-react-app </code>  package and for that we have to manually add all the required files.</i>\r\n                <br />  <br />  <br /> \r\n            </div>\r\n\r\n          \r\n            <h4 className=\"content-heading\"> File and Folder Structure</h4> \r\n            <p> Once you create an app with the help of  <code> create-react-app </code>  package and open that folder in IDE you will see this file and folder structure. \r\n              <br /><small>  (This screenshot also includes some custom folders for better code management.) </small>\r\n            </p>\r\n          <div className=\"row col-md-12\"> \r\n            <div className=\"col-md-4\">\r\n              <img className=\"folderAndFileStructureImage\" src={folderAndFileStructureImage} alt=\"folder and file structure\" />\r\n              </div>\r\n            <div className=\"col-md-8 \"> \r\n               \r\n                <div> \r\n                  <span className=\"code-cursor\"> &#187; </span>\r\n                  <b className=\"theme-color-text\"> build: </b> This is predefined folder which holds various combined bundles for all js/html/css files.\r\n                  This folder gets created once we execute <code>npm build / npm run build / npm run deploy</code> etc. The generated code from build  command \r\n                  gets saved into this build folder and for production deployment we can use this folder. <br />  \r\n                  \r\n                  <span className=\"code-cursor\"> &#187; </span>\r\n                  <b className=\"theme-color-text\"> node_modules: </b> This is the folder which holds all the packages. This folder gets created once we run \r\n                  <code> npm install</code> command. As you would be knowing that <code> npm install</code> does install the all packages/references which are \r\n                  mentioned in the <code> package.json</code> file of the solution and stores package's data into this node_modules folder. <br />    \r\n\r\n                  <span className=\"code-cursor\"> &#187; </span>    \r\n                  <b className=\"theme-color-text\"> public: </b>  This is being used to store meta data for the application along with the main \r\n                  <code>index.html</code> file.  <br />\r\n                  \r\n                  <div className=\"pd2rem-left\"> \r\n                    <span className=\"code-cursor\"> &#187; </span>    \r\n                    <b> favicon.ico: </b>  This is the icon file which gets renders in left side of title bar of the browser. We can change it with custom icon file.  <br />\r\n\r\n                    <span className=\"code-cursor\"> &#187; </span>   \r\n                    <b className=\"theme-color-text\"> index.html: </b>  This is the main file which holds all the nested pages inside it. \r\n                    The <b>Single Page Application</b> concept begins with this file. In this file we do have one container (div with id \"root\"), where \r\n                    all the react components gets rendered with the help of routing.   <br />\r\n\r\n                    <span className=\"code-cursor\"> &#187; </span>   \r\n                    <b className=\"theme-color-text\"> manifest.json: </b>  manifest.json provides metadata for the application.  <br />\r\n                  </div>\r\n\r\n                  <span className=\"code-cursor\"> &#187; </span>   \r\n                  <b className=\"theme-color-text\"> src: </b>  As name says src is a main root folder we can say where all the other components resides. \r\n                  Our whole application resides inside this folder. <br /> \r\n\r\n                  <div className=\"pd2rem-left\">  \r\n                    <span className=\"code-cursor\"> &#187; </span>   \r\n                    <b className=\"theme-color-text\"> assets: </b>  This is the custom folder which we have created to hold some files for our application. \r\n                    Like images which are being used in this application.   <br />\r\n\r\n                    <span className=\"code-cursor\"> &#187; </span>   \r\n                    <b className=\"theme-color-text\"> components: </b>  This is also a custom folder which holds the all logical components (class or function) for the application.  <br />\r\n\r\n                    <span className=\"code-cursor\"> &#187; </span>   \r\n                    <b className=\"theme-color-text\"> App.js: </b>  This file gets created by default which works as a first component of React. We can customized it according to our need.   <br />\r\n\r\n                    <span className=\"code-cursor\"> &#187; </span>   \r\n                    <b> App.css: </b>  This file holds the styles for respective .js file. We can also use external css files by importing them into components.  <br />\r\n\r\n                    <span className=\"code-cursor\"> &#187; </span>   \r\n                    <b> App.test.js: </b>  Test cases file for <code>App.js</code> file. Like this we can create many test cases as per our logic and component.  <br />\r\n\r\n                    <span className=\"code-cursor\"> &#187; </span>   \r\n                    <b className=\"theme-color-text\"> index.css: </b>  We can use this file as main css file for the application. All defined classes would be accessible \r\n                    across all the application as this being imported at root level(index.js). <br />\r\n\r\n                    <span className=\"code-cursor\"> &#187; </span>   \r\n                    <b className=\"theme-color-text\"> index.js: </b>  This file helps to render the content/element into the html element(\"root\") with the help of \r\n                    <code> ReactDOM.render()</code>.  <br />\r\n\r\n                    <span className=\"code-cursor\"> &#187; </span>   \r\n                    <b> logo.svg: </b>  This is the logo of your application.  <br />\r\n\r\n                    <span className=\"code-cursor\"> &#187; </span>   \r\n                    <b> reportWebVitals.js: </b>  This is the built-in tool for measuring the real life performance of our application.   <br />\r\n\r\n                    <span className=\"code-cursor\"> &#187; </span>   \r\n                    <b className=\"theme-color-text\"> Route.js: </b>  Web application needs routing to navigate from one page to another and to achieve \r\n                    this we should create some configuration such that we land onto the right place. For the same purpose we are using this file to config all the path and destination.  <br />\r\n\r\n                    <span className=\"code-cursor\"> &#187; </span>   \r\n                    <b> setupTests.js: </b>  We do get <code> Jest </code> framework to test our application and to get it setup this file helps to achieve this.  <br />\r\n                  </div>\r\n\r\n                  <span className=\"code-cursor\"> &#187; </span>   \r\n                  <b className=\"theme-color-text\"> .gitignore: </b>  Most popular file while working with code repositories. It helps to avoid \r\n                  unnecessary files/folder from being checked in.  <br />              \r\n\r\n                  <span className=\"code-cursor\"> &#187; </span>   \r\n                  <b className=\"theme-color-text\"> package.json: </b>  <code>React</code> uses packages to build the application. This file work as a entry point \r\n                  of those packages and helps to get it installed via <code>npm install</code> for our application.  <br />\r\n\r\n                  <span className=\"code-cursor\"> &#187; </span>   \r\n                  <b className=\"theme-color-text\"> package-lock.json: </b>  This file holds the drill down details for the all packages.  <br />\r\n\r\n                  <span className=\"code-cursor\"> &#187; </span>   \r\n                  <b> README.md: </b>  If we want to keep some instructions or a basic info about application then we can use this file to do so. <br />\r\n                  \r\n                  \r\n                </div>\r\n            \r\n            </div>\r\n        \r\n          </div>\r\n        \r\n        </div>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/appStructure.ff36b1e4.png\";","export default __webpack_public_path__ + \"static/media/appComponent.572f99f2.png\";","export default __webpack_public_path__ + \"static/media/appRendering.3e53a7e6.png\";","import {Component, React} from 'react';\r\nimport appStructure from '../assets/images/appStructure.png';\r\nimport appComponent from '../assets/images/appComponent.png';\r\nimport appRendering from '../assets/images/appRendering.png';\r\n\r\nexport class HowReactWorksComponent extends Component{\r\n\r\n    \r\n    render(){\r\n        \r\n        \r\n        return (\r\n            <div>\r\n                <p>We all know that <code> React </code> is all about  <code> JavaScript </code>.\r\n                 Hence it works like  <code> JavaScript </code> only but there are few things that need to understand here like: \r\n                 How the application flow goes?, What are our root files? etc. Let's have a look into these things:\r\n                 <br /><br />\r\n                 <i>\r\n                   <b> Note</b> : All below content is just an overview of the terminology, later will learn more about it.  \r\n                </i>\r\n                <br />\r\n\r\n                </p>\r\n\r\n\r\n                <h5 className=\"content-heading\"> Building Blocks of React Application</h5>  \r\n                <p> What creates a complete React Application? Below is the basic blocks which helps to create a React Application: </p>\r\n                <center> \r\n                    <img src={appStructure} width='60%' alt=\"App Structure\" />\r\n                </center>\r\n                <br />\r\n                <p>\r\n                <span className=\"code-cursor\"> &#187; </span>  <b> Components</b> : Components are the basic and major block of React Application. We can say in React everything is Component only.\r\n                    We will learn more things about Components as we proceed further.\r\n                    </p>\r\n                <p>\r\n                <span className=\"code-cursor\"> &#187; </span>  <b> Routing</b> : A web application is nothing without a routing. Routing helps us to navigate from one page to another.\r\n                    </p>\r\n                <p>\r\n                <span className=\"code-cursor\"> &#187; </span> <b> Metadata</b> : The necessary data which is required to build the application such as logo, app name, version etc. those we can store into the metadata file.\r\n                    </p>\r\n                 \r\n                 \r\n                <br />\r\n\r\n                <h5 className=\"content-heading\"> Components : The Basic Pillars</h5>  \r\n                <p> No doubt in that, a Component is a major pillar of React Application. The logics which we do create to do some task wrapped as a Component only.\r\n                    There are two types of Component in React as follows:  </p>\r\n                <center> \r\n                    <img src={appComponent} width='60%' alt=\"App Structure\" />\r\n                </center>\r\n                <br />\r\n                <p>\r\n                <span className=\"code-cursor\"> &#187; </span>  <b> Function Component</b> : A Function Component holds the logic. These type of Component are very light weight and easy to implement as these are simple functions. \r\n                    We can create many function components to define some logic or a view also. As these are simple functions hence we can't use state management here using <code> state </code>   and <code> props </code>. \r\n                    Indeed there is very useful feature in React and that is <code> Hooks </code>; which works with Function Components only. Will learn all these things and terminology as we will go further.  \r\n                    </p>\r\n                <p>\r\n                <span className=\"code-cursor\"> &#187; </span>  <b> Class Component</b> : As name says, we can create a class here and that will bring <code> Object Oriented Programming </code> for us. Class Component could be more complex and helps to manage the state as well\r\n                    but as thumb rule is we should keep our Component very light.\r\n                 \r\n                </p>\r\n\r\n                <br />\r\n\r\n                <h5 className=\"content-heading\"> Rendering : How element gets viewed on UI?</h5>  \r\n                <p> So far we learned about the basic things in React, also we saw the logic and view should be as Component but how all these things get rendered on UI?\r\n                    To understand the working let's have a look into the below figure:  </p>\r\n                <center> \r\n                    <img src={appRendering} width='60%' alt=\"App Structure\" />\r\n                </center>\r\n                <br />\r\n                <p>\r\n                <span className=\"code-cursor\"> &#187; </span>   <b> Rendering Component</b> : In the <code> index.js </code> file we use <code> render </code> method to assign our elements to the <code> div tag having root as id</code>.\r\n                    <code> ReactDOM.render(,)  </code> method render the passed content(html+logic) on the specified(div with id root) tag.\r\n                </p>\r\n                <p>\r\n                <span className=\"code-cursor\"> &#187; </span>    <b> Html Root Component</b> : <br />\r\n                        &#60;div id=\"root\"&#62;   <br />\r\n                        Inside this tag main component gets rendered and act as a parent component.  \r\n                        In this example we have used “App” component as a parent component. <br />\r\n                        &#60;/div&#62; \r\n                </p>\r\n                <p>\r\n                <span className=\"code-cursor\"> &#187; </span>   <b> App Component</b> : App Component contains the things which we want to render. In case we want to execute our routing inside this Component then\r\n                    we have to create a placeholder for the Routing and call the <code> Route Component </code> such that child Component cna gets rendered inside it. \r\n                    Here we have &#60;AppRoute /&#62; tag for Routing.\r\n                </p>\r\n                <p>\r\n                <span className=\"code-cursor\"> &#187; </span>   <b> AppRoute Component</b> :  In this Component we define the path and corresponding the Components such that we can render the content on the tag specified as above.\r\n                </p>\r\n                <p>\r\n                <span className=\"code-cursor\"> &#187; </span>   <b> Components</b> : These are the blocks which contains the view to render on the UI.\r\n                </p>\r\n                \r\n                <br />\r\n\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}","import { React} from 'react';\r\n\r\nfunction FunctionComponent(){\r\n\r\n const _htmlString = ( \r\n `      import { React } from 'react'; \r\n\r\n            function FunctionComponent() {\r\n                const _template = (\r\n                <div > This is code snippet for function component</div>\r\n                )\r\n                return _template;\r\n            }\r\n        export default FunctionComponent`\r\n )\r\n\r\n\r\nconst _template = (\r\n    <div>  \r\n        <h4 className=\"content-heading\"> Function Component Code Snippet </h4> \r\n        <p> Function component is component which contains functions. The name should start from capital letter otherwise we can not use it as a react tag</p>\r\n\r\n        <h5 className=\"content-heading\"> Code Snippet </h5>  \r\n        <textarea className=\"code-snippet-textarea\"  readOnly value={_htmlString} /> <br /> <br /> \r\n\r\n        <h5 className=\"content-heading\"> Code Explanation </h5>  \r\n        <p> <span className=\"code-cursor\"> &#187; </span>  <code>  import &#123; React &#125;  from 'react';  </code>: We have to import this and this will help to render the dom.</p>\r\n        <p> <span className=\"code-cursor\"> &#187; </span>  <code>  function FunctionComponent() &#123; ..... &#125;   </code>: Function </p>\r\n        <p> <span className=\"code-cursor\"> &#187; </span>  <code>  const _template = ( ..... )  </code>: constant that is holding the html tag along with js</p>\r\n        <p> <span className=\"code-cursor\"> &#187; </span>  <code> export default FunctionComponent  </code>: Exporting</p>\r\n    </div>\r\n\r\n)\r\n     return  _template ; \r\n}\r\n\r\n\r\n\r\nexport default FunctionComponent  \r\n\r\n ","import { Component, React} from 'react';\r\n\r\n\r\nclass ClassComponent extends Component{\r\n    render() {\r\n        const _htmlString = (\r\n`        import { Component, React } from 'react';\r\n        import logo from '../logo.svg';\r\n        \r\n        class ClassComponent extends Component {\r\n            render() {\r\n                const _template = ( <div > This is code snippet for class component</div> )\r\n                return _template;\r\n            }\r\n        }\r\n            `\r\n        )\r\n\r\n\r\nconst _template = (\r\n    <div> \r\n        <h4 className=\"content-heading\"> Class Component Code Snippet </h4> \r\n        <p> Class component is component which contains functions.</p>\r\n\r\n        <h5 className=\"content-heading\"> Code Snippet </h5>  \r\n        <textarea className=\"code-snippet-textarea\"  readOnly value={_htmlString} /> <br /> <br /> \r\n\r\n        <h5 className=\"content-heading\"> Code Explanation </h5>  \r\n        <p> <span className=\"code-cursor\"> &#187; </span>  <code>  import &#123; Component, React &#125;  from 'react';  </code>: We have to import this and this will help to render the dom.</p>\r\n        <p> <span className=\"code-cursor\"> &#187; </span>  <code>  class ClassComponent extends Component &#123; ..... &#125;   </code>: Function </p>\r\n        <p> <span className=\"code-cursor\"> &#187; </span>  <code>  const _template = ( ..... )  </code>: constant that is holding the html tag along with js</p>\r\n        <p> <span className=\"code-cursor\"> &#187; </span>  <code> export default ClassComponent  </code>: Exporting</p>\r\n    </div>\r\n\r\n)\r\n\r\n     return  _template ; \r\n}\r\n}\r\n\r\nexport default ClassComponent\r\n\r\n ","import { Component, React} from 'react';\r\n\r\n \r\n\r\nclass  StateAndPropsComponent extends Component {\r\n    \r\n    // added state property which will holds the data for this component\r\n    state = {\r\n        // adding below msg property which will store a text to display on UI\r\n         msg : 'This is the text from state property.'\r\n    }\r\n\r\n    render() { \r\n\r\n        const { msg } = this.state; // extracting msg property from state property to avoid writing long expression\r\n        const _stateHtmlString = ( \r\n`class  StateAndPropsComponent extends Component {\r\n\r\n    // added state property which will holds the data for this component\r\n    state = {\r\n    // adding below msg property which will store a text to display on UI\r\n    msg : 'This is the text from state property.'\r\n    }\r\n                    \r\n    // use of state property inside the template \r\n    render() {\r\n\r\n        const { msg } = this.state; // extracting msg property from state property to avoid writing long expression\r\n\r\n        const _template = ( \r\n            <p> Displaying text from state property: <span className=\"important-text\"> { this.state.msg } </span> </p> \r\n            <p> Alternate way to display the content of state property: <span className=\"important-text\"> { msg } </span> </p>\r\n        )\r\n        return _template;\r\n}\r\n `\r\n            )\r\n\r\n            const _propsHtmlString = ( \r\n`   // Passing a property to child component from parent component\r\n    <ChildComponent parentText=\"This is the text from parent\" />\r\n                \r\n                \r\n    // In the child component we can use the above property via props\r\n    <h2> Child Component showing text from parent: {this.props.parentText}</h2>\r\n`\r\n)\r\n                \r\n        \r\n        const _template = (\r\n            <div> \r\n                <h4 className=\"content-heading\"> What is state? </h4> \r\n                <p> state is a property which holds the data for its component and can change over time. We can assign an object to it \r\n                    and add multiple properties inside that. Let's see how it works: </p>\r\n                <p> Displaying text from state property: <span className=\"important-text\"> { this.state.msg } </span> </p>\r\n                <p> Alternate way to display the content of state property: <span className=\"important-text\"> { msg } </span> </p>\r\n        \r\n                <h5 className=\"content-heading\"> Code Snippet </h5>  \r\n                <textarea className=\"code-snippet-textarea\"  readOnly value={_stateHtmlString} /> <br /> <br /> \r\n        \r\n                <h5 className=\"content-heading\"> Code Explanation </h5>  \r\n                <p> <span className=\"code-cursor\"> &#187; </span>  <code>    state =  &#123; ...... &#125;   </code>: This is the declaration of state property inside the class. We can add n number of properties inside this state.\r\n                It helps to store any property-value which get used into the current component.</p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>  <code>   &#123; this.state.msg &#125;   </code>: This is one type of expression to read the value of any property from state property.  </p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>  <code>  const &#123; msg &#125;  = this.state;  </code>: An alternate way to extract the value of a property. \r\n                Create a constant with the same name of the property which is declared inside the state property and store the data into it.\r\n                To use of the const we can directly use like this: <code>  &#123; msg &#125;  </code> </p>\r\n\r\n                <br />\r\n                <h4 className=\"content-heading\"> What is props? </h4> \r\n                <p> Props are simple javaScript object. Props are read-only components. It is an object which stores the value of attributes of a tag and work similar to the HTML attributes.\r\n                    It allows passing data from one component to other components.</p> \r\n                <h5 className=\"content-heading\"> Code Snippet </h5>  \r\n                <textarea className=\"code-snippet-textarea\"  readOnly value={_propsHtmlString} /> <br /> <br /> \r\n\r\n\r\n                <h5 className=\"content-heading\"> Code Explanation </h5>  \r\n                <p> <span className=\"code-cursor\"> &#187; </span>  <code>  &#60;ChildComponent parentText=\"This is the text from parent\" /&#62;  </code>: We have to import this and this will help to render the dom.</p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>  <code>  Child Component showing text from parent:  &#123;this.props.parentText &#125;   </code>: Using property </p>\r\n            </div>\r\n        )\r\n                return  _template ; \r\n    }\r\n}\r\n\r\n\r\nexport { StateAndPropsComponent }\r\n ","\r\nexport const bestPracticeContent = [\r\n    \r\n    {\r\n        Heading: 'Naming Convention',\r\n        Description: 'Naming Convention should be according to the language.'\r\n    },\r\n\r\n    {\r\n        Heading: 'Comments',\r\n        Description: 'Give proper comment to the method/variable or anything which holds a meaning.'\r\n    },\r\n\r\n    {\r\n        Heading: 'Modularity',\r\n        Description: 'In the coding modularity should be there.'\r\n    },\r\n\r\n    {\r\n        Heading: 'Simplification',\r\n        Description: 'Write simple and understandable code.'\r\n    }\r\n\r\n]\r\n\r\nexport const reactFundamentalsContent = [\r\n    \r\n    {\r\n        Heading: 'Fundamental 1',\r\n        Description: 'This is the description'\r\n    },\r\n\r\n    {\r\n        Heading: 'Fundamental 2',\r\n        Description: 'This is the description'\r\n    },\r\n\r\n    {\r\n        Heading: 'Fundamental 3',\r\n        Description: 'This is the description.'\r\n    },\r\n \r\n\r\n]\r\n\r\n","import {Component, React} from 'react';\r\nimport { bestPracticeContent } from '../assets/constantFiles/appDataConstants';\r\n\r\nexport class BestCodingPracticesComponent extends Component {\r\n\r\n    render(){\r\n        \r\n         const _template = (\r\n\r\n            <div className=\"card-container row col-md-12\"> \r\n        \r\n                {/* here we have to assign key to uniquely identification of the tag */}\r\n                {bestPracticeContent.map(content => \r\n                <div className=\"card-div col-md-3\"  key={content.Heading}> \r\n                    <div className=\"card-heading\"> { content.Heading } </div> \r\n                    <div className=\"card-description\"> { content.Description }</div>\r\n                \r\n                </div>\r\n                )}\r\n            \r\n            </div>\r\n         )\r\n         \r\n         return _template;\r\n        \r\n    }\r\n}","import {Component, React} from 'react';\r\nimport { reactFundamentalsContent } from '../assets/constantFiles/appDataConstants';\r\n\r\nexport class ReactFundamentalsComponent extends Component {\r\n\r\n    render(){\r\n        \r\n         const _template = (\r\n\r\n            <div className=\"card-container row col-md-12\"> \r\n        \r\n                {/* here we have to assign key to uniquely identification of the tag */}\r\n                {reactFundamentalsContent.map(content => \r\n                <div className=\"card-div col-md-3\"  key={content.Heading}> \r\n                    <div className=\"card-heading\"> { content.Heading } </div> \r\n                    <div className=\"card-description\"> { content.Description }</div>\r\n                \r\n                </div>\r\n                )}\r\n            \r\n            </div>\r\n         )\r\n         \r\n         return _template;\r\n        \r\n    }\r\n}","import {Component, React} from 'react'; \r\n\r\nexport class EventHandlingComponent extends Component{\r\n  \r\n    state = {\r\n        counter : 0,\r\n        buttonType: \"None of the\"\r\n    }\r\n\r\n    // below  method is not required if using arrow function\r\n    // constructor() {\r\n\r\n    //     super(); // We are calling this to use constructor\r\n    //   //  console.log(this)\r\n\r\n    //   // binding the method such that we can use 'this' keyword inside the body of 'IncrementCounter' method \r\n    //   this.IncrementCounter = this.IncrementCounter.bind(this);\r\n    // }\r\n\r\n    render(){\r\n\r\n        const _eventHandlingHtmlString_1 = (\r\n` // tag to display counter\r\n  <strong>Currently Counter is: </strong>  { this.formatCount() }  \r\n\r\n  // adding button for counter increment and decrement\r\n  <button className=\"btn btn-primary form-control\" type=\"button\" onClick={this.IncrementCounter}> Increment</button> \r\n  <button className=\"btn btn-danger form-control\" type=\"button\" onClick={ () => {this.setState({counter : this.state.counter - 1})}}> Decrement</button>\r\n               \r\n  // Adding arrow function for Increasing counter value. By this arrow function we can avoid binding in constructor\r\n  IncrementCounter = () => {\r\n  // we have to tell the react that something got changed such that react can update the dom  \r\n  this.setState({counter : this.state.counter + 1}); \r\n  }\r\n\r\n  // Adding the another func to format the counter value\r\n  formatCount() {\r\n    const { counter } = this.state; // taking out the value of counter from state object and saving into another constant\r\n    return counter === 0 ? <span className=\"text-warning fs3rem\">  Zero  </span>: counter > 0 ? <span className=\"text-success fs3rem\"> {counter} </span> : <span className=\"text-danger fs3rem\">{counter} </span> ;\r\n}\r\n`\r\n)\r\n\r\n        return (\r\n            <div> \r\n                <h4 className=\"content-heading\"> Event Handling </h4> \r\n                    <p> Event handling is an event to handle the action. An Action could be anything such as user clicked on a button, mouse-hover,\r\n                        mouse-focus etc. </p>\r\n                <h5 className=\"content-heading\"> Sample Example - 1 </h5>\r\n                <p>Below example is for simple implementation of events. We are trying to understand how to handle events.</p> \r\n                <div className=\"row col-md-12\">\r\n                    <div className=\"col-md-3 form-group pd10\"> \r\n                        <strong>Currently Counter is: </strong> <br /> { this.formatCount() }  \r\n                        <br/>  <br/>\r\n                        <button className=\"btn btn-primary form-control\" type=\"button\" onClick={this.IncrementCounter}> Increment</button> \r\n                        <br/> <br/>\r\n                        <button className=\"btn btn-danger  form-control\" type=\"button\" onClick={ () => {this.setState({counter : this.state.counter - 1})}}> Decrement</button>\r\n                    </div> \r\n\r\n                    <div className=\"col-md-9 form-group pd10\"> \r\n                        <textarea className=\"code-snippet-textarea\"  readOnly value={_eventHandlingHtmlString_1} /> <br /> <br /> \r\n                    </div> \r\n                </div>\r\n                \r\n                <h5 className=\"content-heading\"> Code Explanation </h5> \r\n                <p> <span className=\"code-cursor\"> &#187; </span>   <code>  &#123; this.formatCount()  &#125;   </code>: An expression which calls custom method to get the count along with some custom formatting.</p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>    <code>  onClick=&#123; this.IncrementCounter &#125;   </code>: A click event of a button which calls non-parameterized method  'IncrementCounter' </p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>    <code>  IncrementCounter = () = &#62; &#123; \r\n                            this.setState(&#123; counter : this.state.counter + 1 &#125;); &#125;  </code>: This is the body of the 'IncrementCounter' method which will increase the counter.\r\n                            Here we have used 'Arrow function' <code> () = &#62; &#123; ...... &#125;</code> concept. By using this no need to bind the <code>'this'  </code> object with the method. Means in React we can not use 'this' object directly.\r\n                            Hence to use it we have to bind it inside the 'constructor' like below: <br/>\r\n                            <code> constructor() &#123;  <br/>\r\n                            &#47;&#47; binding the method such that we can use 'this' keyword inside the body of 'IncrementCounter' method  <br/>\r\n                                    this.IncrementCounter = this.IncrementCounter.bind(this);  <br/>\r\n                                     &#125;  </code>\r\n                            if we don't do this, we will not be able to access 'this' it will simply throw 'undefined' error.  </p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>\r\n                <strong> Inside <code> 'IncrementCounter' </code>  method why not simply doing this  </strong> <code>this.state.counter + 1  </code>   instead of \r\n                <code> this.setState(&#123; counter : this.state.counter + 1 &#125;); &#125;  </code> ?:\r\n                 Okay so, this is because React is a JavaScript not a template engine. So we have to tell the React that something got changed so update the DOM. </p>\r\n\r\n\r\n                 <p> <span className=\"code-cursor\"> &#187; </span> <code> this.setState( .... ) </code> : 'setState' method will set the new value to the objects. By doing this React understands that current DOM requires some update.\r\n                 Hence as a result it compares the Current Vs New DOM and updates only required part not the full DOM.</p>\r\n\r\n                <br />\r\n                 <h5 className=\"content-heading\"> Sample Example - 2</h5>\r\n                 <p>In this example we will see how we can pass the value to the event function. Like passing some id/text to the handling method.</p> \r\n            \r\n                 <div className=\"row col-md-12\">\r\n                    <div className=\"col-md-12  pd10\"> \r\n                        <strong>List of Buttons:</strong> <br />  \r\n                         \r\n                        <button className=\"btn btn-primary\" type=\"button\" onClick={() => this.printButtonType(\"Primary\")}> Primary Button</button> \r\n                        &nbsp;&nbsp;\r\n                        <button className=\"btn btn-warning\" type=\"button\" onClick={() => this.printButtonType(\"Warning\")}> Warning Button</button> \r\n                        &nbsp;&nbsp;\r\n                        <button className=\"btn btn-success\" type=\"button\" onClick={() => this.printButtonType(\"Success\")}> Success Button</button> \r\n                        &nbsp;&nbsp;\r\n                        <button className=\"btn btn-danger\" type=\"button\" onClick={() => this.printButtonType(\"Danger\")}> Danger Button</button> \r\n                        &nbsp;&nbsp;\r\n                        <button className=\"btn btn-info\" type=\"button\" onClick={() => this.printButtonType(\"Info\")}> Info Button</button> \r\n                        &nbsp;&nbsp;\r\n                        <button className=\"btn btn-dark\" type=\"button\" onClick={() => this.printButtonType(\"Dark\")}> Dark Button</button> \r\n                        &nbsp;&nbsp;\r\n                        <button className=\"btn btn-light\" type=\"button\" onClick={() => this.printButtonType(\"Light\")}> Light Button</button> \r\n                        &nbsp;&nbsp;\r\n                        <button className=\"btn btn-link\" type=\"button\" onClick={() => this.printButtonType(\"Link\")}> Link Button</button> \r\n\r\n                    </div> \r\n                    <div className=\"col-md-12 form-group pd10\" style={{'fontSize':'1.3rem'}}> \r\n                        <span> You have clicked </span> : <strong> {this.state.buttonType + \" Button\"} </strong> \r\n                    </div>\r\n                    \r\n                    <div className=\"col-md-12 form-group pd10\"> \r\n                        <p>  <span className=\"code-cursor\"> &#187; </span>   The only change in the code would be related to event calling function: \r\n                            <code>  onClick=&#123;() =&#62; this.printButtonType(\"Primary\")&#125; </code>.\r\n                            Here we are passing \"Primary\" as a parameter to the <code> printButtonType </code> function. \r\n                            Same as for the other buttons we are passing different text as per the \"BootStrap CSS\" type.\r\n                        </p>\r\n\r\n                        <p> <span className=\"code-cursor\"> &#187; </span>  Nothing much in the body of function. It will look like this <br />\r\n                            <code>  printButtonType = (_buttonType) =&#62; &#123; <br />\r\n                            this.setState(&#123;buttonType : _buttonType&#125;);  &#125;\r\n                            </code>.\r\n                            Simply created a parameterized function and setting the new value to one of the state variable.\r\n                        </p>\r\n\r\n                        \r\n        \r\n    \r\n\r\n                    </div> \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // IncrementCounter(){\r\n    //     alert('IncrementCounter Clicked');\r\n    //         console.log(this);\r\n    //     // we can not use directly this.state.counter and we can not increase the counter simply\r\n    //     // Because this is undefined here in this method. to use this we have to bind it on constructor\r\n\r\n    //     // to avoid the binding we have to use arrow function because it don't rebind it instead it inherited it\r\n    // }\r\n\r\n    // Arrow function\r\n    IncrementCounter = () => {\r\n        this.setState({counter : this.state.counter + 1}); // we have to tell the react that something got changed such that react can update the dom  \r\n    }\r\n\r\n    // Arrow function\r\n   DecrementCounter = () => {\r\n        this.setState({counter : this.state.counter - 1}); // we have to tell the react that something got changed such that react can update the dom  \r\n    }\r\n\r\n    // Adding the another func to format the counter value\r\n    formatCount() {\r\n        const { counter } = this.state;\r\n        return counter === 0 ? <span className=\"text-warning fs3rem\">  Zero  </span>: counter > 0 ? <span className=\"text-success fs3rem\"> {counter} </span> : <span className=\"text-danger fs3rem\">{counter} </span> ;\r\n    }\r\n\r\n    // Adding a method to print the button type\r\n    printButtonType = (_buttonType) => {\r\n        this.setState({buttonType : _buttonType});\r\n    }\r\n}","import { Component, React} from 'react';\r\n\r\n \r\n\r\nclass  PassingDataBetweenComponent extends Component {   \r\n\r\n    render() { \r\n\r\n const _p2cUsingFCHtmlString = ( \r\n`// Creating function component for parent and passing text to child FunctionComponent\r\nfunction ParentFunctionComponent() {\r\n    const _parentTemplate = (\r\n       <div style={{'border':'1px solid purple', 'padding':'1rem'}}> \r\n           <h3> This is Parent Component</h3>\r\n           <ChildComponent parentText=\"This is the text from Parent Function Component\" />\r\n       </div> \r\n    )\r\n    return _parentTemplate;\r\n   }\r\n   \r\n   // Creating function component for child and printing text from parent function component\r\n   function ChildFunctionComponent({parentText}) {\r\n       const _childTemplate = ( \r\n           <div style={{'border':'1px solid orange', 'padding':'1rem'}}> \r\n               <h4> This is Child Component</h4>\r\n               <h5> Got this text from parent component:  <strong> {parentText}  </strong> </h5>\r\n           </div> \r\n        )\r\n   \r\n    return _childTemplate;\r\n   }\r\n`\r\n)\r\n\r\nconst _p2cUsingCCHtmlString = ( \r\n `// Creating class component for parent and passing text to child class component\r\nclass ParentClassComponent extends Component{\r\n    render() {\r\n        const _parentTemplate = (\r\n        <div style={{'border':'1px solid purple', 'padding':'1rem'}}> \r\n            <h3> This is Parent Component</h3>\r\n            <ChildClassComponent parentText=\"This is the text from Parent Class Component\" />\r\n        </div> \r\n        )\r\n        return _parentTemplate;\r\n    }\r\n}\r\n   \r\n// Creating class component for child and printing text from parent class component\r\nclass ChildClassComponent extends Component {\r\n\r\n    render() {\r\n        const _childTemplate = ( \r\n            <div style={{'border':'1px solid orange', 'padding':'1rem'}}> \r\n                <h4> This is Child Component</h4>\r\n                <h5> Got this text from parent component: <strong> {this.props.parentText}  </strong></h5>\r\n            </div> \r\n        )\r\n    \r\n        return _childTemplate;\r\n    }\r\n}\r\n\r\n `\r\n )    \r\n \r\n \r\n const _p2NcUsingCCHtmlString = ( \r\n` // Try adding any tag as a nested child\r\n<ChildClassComponent parentText=\"This is the text from Parent Class Component\" >\r\n    <strong> I am nested children </strong>\r\n</ChildClassComponent>\r\n\r\n\r\n// In the Child component add below line, 'this.props.children' here children is a default property\r\n<h5> Nested Child: <strong> {this.props.children}  </strong></h5>\r\n`\r\n )    \r\n\r\n\r\n const _c2PUsingClassComponent = (\r\n\r\n`// Creating class component for parent and passing text to child class component\r\nclass C2PParentClassComponent extends Component{\r\n    // Let's create a variable to store the data from child component\r\n    state={\r\n        dataFromChild : \"Default text in parent component itself\"\r\n    }\r\n\r\n    // we have to create a call back function here such that we can retrieve data from child via that function\r\n    getDataFromChildCallBackFunction = (dtFromChild) => {\r\n        // update the state variable\r\n        this.setState({dataFromChild : dtFromChild});\r\n    }\r\n\r\n    render() {\r\n        const _parentTemplate = (\r\n        <div style={{'border':'1px solid purple', 'padding':'1rem'}}> \r\n            <h3> This is Parent Component</h3>\r\n            <C2PChildClassComponent \r\n            parentText=\"This is the text from Parent Class Component\" \r\n            parentCallBack={this.getDataFromChildCallBackFunction} /> <br/>\r\n            Data received from child component: <strong> {this.state.dataFromChild}</strong>\r\n        </div> \r\n        )\r\n        return _parentTemplate;\r\n    }\r\n}\r\n   \r\n// Creating class component for child and printing text from parent class component\r\nclass C2PChildClassComponent extends Component {\r\n\r\n    sendDataToParent = ()=>{\r\n        // assigning value to the call back function\r\n        this.props.parentCallBack(\"Sending data from child component\");\r\n    }\r\n\r\n    render() {\r\n        const _childTemplate = ( \r\n            <div style={{'border':'1px solid orange', 'padding':'1rem'}}>   \r\n                <h4> This is Child Component</h4>\r\n                <h5> Got this text from parent component: <strong> {this.props.parentText}  </strong></h5> \r\n                <button className=\"btn btn-primary\" onClick={this.sendDataToParent} > Send data to parent component</button> \r\n            </div> \r\n        )\r\n    \r\n        return _childTemplate;\r\n    }\r\n}\r\n\r\n`\r\n )\r\n \r\n \r\n        const _template = (\r\n            <div> \r\n                <h4 className=\"content-heading\"> Passing Data From Parent To Child </h4> \r\n                <p> There are two approaches to achieve this</p>\r\n                <p> 1. Passing the property using <code> Function Components</code> </p>\r\n                <p> 2. Using <code>props</code> (works with <code>Class Components</code>) </p>\r\n               \r\n                \r\n                <h4 className=\"content-heading\"> Parent To Child: Using Function Component </h4>  \r\n                <div> \r\n                   <ParentFunctionComponent  />\r\n                </div> <br /> \r\n                <textarea className=\"code-snippet-textarea\"  readOnly value={_p2cUsingFCHtmlString} /> <br /> <br /> \r\n        \r\n                <h5 className=\"content-heading\"> Code Explanation </h5>  \r\n                <p> <span className=\"code-cursor\"> &#187; </span>  \r\n                <code>  &#60;ChildComponent parentText=\"This is the text from parent\" /&#62;  </code>: \r\n                Passing the data from parent to child components</p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>  \r\n                <code>  function ChildComponent(&#123; parentText  &#125;)  &#125;   </code>: \r\n                Passing property to child component </p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>\r\n                <code>  This is the text from parent: &#123; parentText  &#125; </code>: \r\n                Using property to show case the value </p>\r\n\r\n\r\n                <br />\r\n                <h4 className=\"content-heading\"> Parent To Child: Using Class Component </h4>  \r\n                <div> \r\n                   <ParentClassComponent  />\r\n                </div> <br /> \r\n                <textarea className=\"code-snippet-textarea\"  readOnly value={_p2cUsingCCHtmlString} /> <br /> <br /> \r\n        \r\n                <h5 className=\"content-heading\"> Code Explanation </h5>  \r\n                <p> <span className=\"code-cursor\"> &#187; </span>  \r\n                <code>  &#60;ChildComponent parentText=\"This is the text from parent\" /&#62;  </code>: \r\n                Passing the data from parent to child components</p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>  \r\n                <code>  function ChildComponent(&#123; parentText  &#125;)  &#125;   </code>: \r\n                Passing property to child component </p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>\r\n                <code>  This is the text from parent: &#123; parentText  &#125; </code>: \r\n                Using property to show case the value </p>\r\n\r\n                <br />\r\n                <h4 className=\"content-heading\"> Parent To Child: Using Class Component - Passing Complex Object/ Additional Children</h4>  \r\n                 \r\n                <textarea className=\"code-snippet-textarea\"  readOnly value={_p2NcUsingCCHtmlString} /> <br /> <br />\r\n\r\n\r\n\r\n\r\n                <h4 className=\"content-heading\"> Passing Data From Child To Parent </h4> \r\n                <p> 1. We need to create a callback function in the parent component. This callback function will get the data from the child component. </p> \r\n                <p> 2. Pass the callback function in the parent as a prop to the child component. </p> \r\n                <p> t3. The child component calls the parent callback function using props. </p> \r\n               \r\n                \r\n                <h5 className=\"content-heading\"> Code Snippet </h5>  \r\n                <div> \r\n                   <C2PParentClassComponent  />\r\n                </div> <br /> \r\n                <textarea className=\"code-snippet-textarea\"  readOnly value={_c2PUsingClassComponent} /> <br /> <br />  \r\n        \r\n                <h5 className=\"content-heading\"> Code Explanation </h5>  \r\n                <p> <span className=\"code-cursor\"> &#187; </span>  \r\n                <code>  parentCallBack= &#123; this.getDataFromChildCallBackFunction &#125;   </code>: \r\n                Creating CallBack function <code> getDataFromChildCallBackFunction </code> to receive the data from child component.\r\n                Also creating a property <code> parentCallBack </code> to send the data from child component.</p>\r\n                <p>   \r\n                <code> getDataFromChildCallBackFunction = (dtFromChild) =&#62; &#123; <br />\r\n                       &#47;&#47; update the state variable <br />\r\n                        this.setState(&#125;dataFromChild : dtFromChild &#125;);  &#125;  </code>: \r\n                Creating a body of the method <code>getDataFromChildCallBackFunction </code>. Simply assigning new value to the another property to display in parent component </p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>\r\n                <code> onClick=&#123;this.sendDataToParent&#125;   </code>: \r\n                Added a button in the child component and created it's event <code> </code> </p>\r\n\r\n                <p> <span className=\"code-cursor\"> &#187; </span>\r\n                <code>sendDataToParent = ()=&#62; &#125; <br />\r\n                &#47;&#47; assigning value to the call back function <br />\r\n                    this.props.parentCallBack(\"Sending data from child component\");  &#125;  </code>: \r\n                Body of the <code> sendDataToParent </code> method where we are setting a new text to the CallBack function. As soon as we will set the value,\r\n                this value will get assigned to the parent component.</p> \r\n                \r\n\r\n                <br />\r\n            </div>\r\n        )\r\n                return  _template ; \r\n    }\r\n}\r\n\r\n// Passing data from Parent to Child\r\n// ****************************************** 1. Function Component\r\n// Creating function component for parent and passing text to child function component\r\nfunction ParentFunctionComponent() {\r\n \r\n    const _parentTemplate = (\r\n       <div style={{'border':'1px solid purple', 'padding':'1rem'}}> \r\n           <h3> This is Parent Component</h3>\r\n           <ChildFunctionComponent parentText={\"This is the text from Parent Function Component\"} />\r\n       </div> \r\n    )\r\n    return _parentTemplate;\r\n}\r\n   \r\n// Creating function component for child and printing text from parent function component\r\nfunction ChildFunctionComponent({parentText}) {\r\n    const _childTemplate = ( \r\n        <div style={{'border':'1px solid orange', 'padding':'1rem'}}> \r\n            <h4> This is Child Component</h4>\r\n            <h5> Got this text from parent component: <strong> {parentText}  </strong></h5>\r\n        </div> \r\n    )\r\n   \r\n    return _childTemplate;\r\n}\r\n\r\n// ****************************************** 2. Class Component\r\n// Creating class component for parent and passing text to child class component\r\nclass ParentClassComponent extends Component{\r\n    render() {\r\n        const _parentTemplate = (\r\n        <div style={{'border':'1px solid purple', 'padding':'1rem'}}> \r\n            <h3> This is Parent Component</h3>\r\n            <ChildClassComponent parentText=\"This is the text from Parent Class Component\" >\r\n                {/* <strong> I am nested children </strong> */}\r\n            </ChildClassComponent>\r\n        </div> \r\n        )\r\n        return _parentTemplate;\r\n    }\r\n}\r\n   \r\n// Creating class component for child and printing text from parent class component\r\nclass ChildClassComponent extends Component {\r\n\r\n    render() {\r\n        const _childTemplate = ( \r\n            <div style={{'border':'1px solid orange', 'padding':'1rem'}}> \r\n                <h4> This is Child Component</h4>\r\n                <h5> Got this text from parent component: <strong> {this.props.parentText}  </strong></h5> \r\n                {/* <h5> Nested Child: <strong> {this.props.children}  </strong></h5> */}\r\n            </div> \r\n        )\r\n    \r\n        return _childTemplate;\r\n    }\r\n}\r\n\r\n\r\n\r\n// ****************************************** Child to Parent Component\r\n// Creating class component for parent and passing text to child class component\r\nclass C2PParentClassComponent extends Component{\r\n    // Let's create a variable to store the data from child component\r\n    state={\r\n        dataFromChild : \"Default text in parent component itself\"\r\n    }\r\n\r\n    // we have to create a call back function here such that we can retrieve data from child via that function\r\n    getDataFromChildCallBackFunction = (dtFromChild) => {\r\n        // update the state variable\r\n        this.setState({dataFromChild : dtFromChild});\r\n    }\r\n\r\n    render() {\r\n        const _parentTemplate = (\r\n        <div style={{'border':'1px solid purple', 'padding':'1rem'}}> \r\n            <h3> This is Parent Component</h3>\r\n            <C2PChildClassComponent \r\n            parentText=\"This is the text from Parent Class Component\" \r\n            parentCallBack={this.getDataFromChildCallBackFunction} /> <br/>\r\n            Data received from child component: <strong> {this.state.dataFromChild}</strong>\r\n        </div> \r\n        )\r\n        return _parentTemplate;\r\n    }\r\n}\r\n   \r\n// Creating class component for child and printing text from parent class component\r\nclass C2PChildClassComponent extends Component {\r\n\r\n    sendDataToParent = ()=>{\r\n        // assigning value to the call back function\r\n        this.props.parentCallBack(\"Sending data from child component\");\r\n    }\r\n\r\n    render() {\r\n        const _childTemplate = ( \r\n            <div style={{'border':'1px solid orange', 'padding':'1rem'}}>   \r\n                <h4> This is Child Component</h4>\r\n                <h5> Got this text from parent component: <strong> {this.props.parentText}  </strong></h5> \r\n                <button className=\"btn btn-primary\" onClick={this.sendDataToParent} > Send data to parent component</button> \r\n            </div> \r\n        )\r\n    \r\n        return _childTemplate;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport { PassingDataBetweenComponent  , ChildClassComponent }\r\n\r\n ","import {Component, React} from 'react';\r\n\r\n// import the json data from json file\r\nimport  FeedBackData from '../assets/constantFiles/feedbackData.json';\r\n\r\nexport class FeedBackComponent extends Component{\r\n  \r\n    render(){\r\n        const _template = (\r\n            <div className=\"feedback-container\"> \r\n               <center> <h2> <u> Thank you so much for your feedback </u> </h2><br /> </center> \r\n                {/* here we have to assign key to uniquely identification of the tag */}\r\n                {FeedBackData.feedbackData.map(feedData => \r\n                <div className=\"feedback-div row col-md-12\"  key={ feedData.feedbackCount}> \r\n                    <div className=\"col-md-2 feedback-heading\"> {feedData.userName} </div>  \r\n                    <div className=\"col-md-10 feedback-description\"> {feedData.userFeedback}</div>\r\n                </div>\r\n                )}\r\n            </div>\r\n         )\r\n         return _template;\r\n    }\r\n}","import {Component, React} from 'react'; \r\n\r\n\r\nexport class JSXComponent extends Component{\r\n  \r\n    render(){\r\n        return (\r\n\r\n        <div> \r\n             <h4 className=\"content-heading\"> What is JSX? </h4> \r\n                <p> JSX is JSX  </p> \r\n        \r\n                <h5 className=\"content-heading\"> Code Snippet </h5>  \r\n                <textarea className=\"code-snippet-textarea\"  readOnly value={\"\"} /> <br /> <br /> \r\n        \r\n                <h5 className=\"content-heading\"> Code Explanation </h5>  \r\n                <p> <span className=\"code-cursor\"> &#187; </span>  <code>    state =  &#123; ...... &#125;   </code>: This is the declaration of state property inside the class. We can add n number of properties inside this state.\r\n                It helps to store any property-value which get used into the current component.</p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>  <code>   &#123; this.state.msg &#125;   </code>: This is one type of expression to read the value of any property from state property.  </p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>  <code>  const &#123; msg &#125;  = this.state;  </code>: An alternate way to extract the value of a property. \r\n                Create a constant with the same name of the property which is declared inside the state property and store the data into it.\r\n                To use of the const we can directly use like this: <code>  &#123; msg &#125;  </code> </p>\r\n                <br />\r\n                <br />\r\n                <br />\r\n \r\n        </div>\r\n        );\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/helloWorld_Code.cd372c46.png\";","export default __webpack_public_path__ + \"static/media/helloWorld_UI.02192103.png\";","export default __webpack_public_path__ + \"static/media/custom-app.461ba2c7.zip\";","\r\nimport { AboutReactJsComponent } from  '../../components/aboutReactJsComponent';\r\nimport { FirstReactAppComponent }  from '../../components/firstReactAppComponent';\r\nimport { HowReactWorksComponent } from '../../components/howReactWorksComponent';\r\nimport  FunctionComponent   from '../../components/functionComponent';\r\nimport ClassComponent  from '../../components/classComponent';\r\nimport { StateAndPropsComponent } from '../../components/stateAndPropsComponent';\r\nimport { BestCodingPracticesComponent } from '../../components/bestCodingPracticesComponent';\r\nimport { ReactFundamentalsComponent } from '../../components/reactFundamentalsComponent';\r\nimport { EventHandlingComponent } from '../../components/eventHandlingComponent';\r\nimport { PassingDataBetweenComponent } from '../../components/passingDataComponent';\r\nimport { FeedBackComponent } from '../../components/feedbackComponent';\r\nimport { JSXComponent } from '../../components/jsxComponent';\r\nimport { HelloWorldComponent } from '../../components/helloWorldComponent';\r\nimport { ReactLifecycleComponent } from '../../components/reactLifecycleComponent';\r\n\r\nconst routeData = [\r\n    {\r\n        routeKey:\"AboutReactJs\",\r\n        routePath:\"/AboutReactJs\",\r\n        routeLinkText:\"What is ReactJs?\",\r\n        routeLinkDescription:\"In this you will understand about basics of ReactJs\",\r\n        routeComponent: AboutReactJsComponent\r\n    },\r\n    {\r\n        routeKey:\"FirstReactApp\",\r\n        routePath:'/FirstReactApp',\r\n        routeLinkText:\"My First React App\",\r\n        routeLinkDescription:\"Let's create our First React App\",\r\n        routeComponent: FirstReactAppComponent\r\n    },\r\n    {\r\n        routeKey:\"HowReactWorks\",\r\n        routePath:'/HowReactWorks',\r\n        routeLinkText:\"How React works?\",\r\n        routeLinkDescription:\"Let's understand how React works\",\r\n        routeComponent: HowReactWorksComponent\r\n    },\r\n    {\r\n        routeKey:\"JSX\",\r\n        routePath:'/JSX',\r\n        routeLinkText:\"What is JSX\",\r\n        routeLinkDescription:\"Get it familiar with JSX\",\r\n        routeComponent: JSXComponent\r\n    },\r\n    {\r\n        routeKey:\"HelloWorld\",\r\n        routePath:'/HelloWorld',\r\n        routeLinkText:\"Legendary 'Hello World' Program\",\r\n        routeLinkDescription:\"Understand the 'Hello World' program\",\r\n        routeComponent: HelloWorldComponent\r\n    },\r\n    {\r\n        routeKey:\"ReactFundamentals\",\r\n        routePath:'/ReactFundamentals',\r\n        routeLinkText:\"React Terminology and Fundamentals\",\r\n        routeLinkDescription:\"It's good to get familiar with React terminology and fundamentals\",\r\n        routeComponent: ReactFundamentalsComponent\r\n    },\r\n    {\r\n        routeKey:\"BestCodingPractices\",\r\n        routePath:'/BestCodingPractices',\r\n        routeLinkText:\"Best Coding Practices\",\r\n        routeLinkDescription:\"This will always help us in every language\",\r\n        routeComponent: BestCodingPracticesComponent\r\n    },\r\n    {\r\n        routeKey:\"FunctionComponent\",\r\n        routePath:'/FunctionComponent',\r\n        routeLinkText:\"Function Component\",\r\n        routeLinkDescription:\"This will let you know how we can create function component\",\r\n        routeComponent: FunctionComponent\r\n    },\r\n    {\r\n        routeKey:\"ClassComponent\",\r\n        routePath:'/ClassComponent',\r\n        routeLinkText:\"Class Component\",\r\n        routeLinkDescription:\"This will let you know how we can create class component\",\r\n        routeComponent: ClassComponent\r\n    },\r\n    {\r\n        routeKey:\"ReactLifecycle\",\r\n        routePath:'/ReactLifecycle',\r\n        routeLinkText:\"React Lifecycle\",\r\n        routeLinkDescription:\"It's good to know about React Lifecycle\",\r\n        routeComponent: ReactLifecycleComponent\r\n    },\r\n    {\r\n        routeKey:\"StateAndProps\",\r\n        routePath:'/StateAndProps',\r\n        routeLinkText:\"State and Props\",\r\n        routeLinkDescription:\"Let's prepare for passing the data between components\",\r\n        routeComponent: StateAndPropsComponent\r\n    },\r\n    {\r\n        routeKey:\"EventHandling\",\r\n        routePath:'/EventHandling',\r\n        routeLinkText:\"Event Handling\",\r\n        routeLinkDescription:\"This will let you know about handling the various events\",\r\n        routeComponent: EventHandlingComponent\r\n    },\r\n    {\r\n        routeKey:\"PassingDataBetweenComponents\",\r\n        routePath:'/PassingDataBetweenComponents',\r\n        routeLinkText:\"Passing Data Between Components\",\r\n        routeLinkDescription:\"Let's pass the data between components\",\r\n        routeComponent: PassingDataBetweenComponent\r\n    },\r\n    {\r\n        routeKey:\"FeedBack\",\r\n        routePath:'/FeedBack',\r\n        routeLinkText:\"FeedBack\",\r\n        routeLinkDescription:\"Feedback\",\r\n        routeComponent: FeedBackComponent\r\n    }\r\n    // {\r\n    //     routeKey:\"1\",\r\n    //     routePath:'/',\r\n    //     routeLinkText:\"Conditions/Loops\",\r\n    //     routeLinkDescription:\"\",\r\n       \r\n    // },\r\n    // {\r\n    //     routeKey:\"2\",\r\n    //     routePath:'/',\r\n    //     routeLinkText:\"Routing\",\r\n    //     routeLinkDescription:\"\",\r\n       \r\n    // },\r\n    // {\r\n    //     routeKey:\"3\",\r\n    //     routePath:'/',\r\n    //     routeLinkText:\"Forms\",\r\n    //     routeLinkDescription:\"\",\r\n         \r\n    // },\r\n    // {\r\n    //     routeKey:\"4\",\r\n    //     routePath:'/',\r\n    //     routeLinkText:\"API\",\r\n    //     routeLinkDescription:\"\",\r\n        \r\n    // }\r\n    \r\n\r\n ]\r\n\r\n export default routeData\r\n    \r\n","import {Component, React} from 'react';\r\n\r\nimport helloWorld_Code from '../assets/images/helloWorld_Code.png';\r\nimport helloWorld_UI from '../assets/images/helloWorld_UI.png';\r\nimport customApp from '../assets/downloadFiles/custom-app.zip';\r\n\r\n\r\nexport class HelloWorldComponent extends Component {\r\n\r\nrender() {\r\n\r\n    return(\r\n\r\n    <div>\r\n        <h4 className=\"content-heading\"> Hello World Application </h4> \r\n        <p> We can not start anything without legendary <code> Hello World</code> application. So here we are;\r\n        A simple React Application requires majorly below elements:   <br />  \r\n        <span className=\"code-cursor\"> &#187; </span>  One <code> .js </code> file which will contain the basic <code> React Component </code>which will help to render the data. <br />\r\n        <span className=\"code-cursor\"> &#187; </span>  Another elements is <code> .html </code> file which will contain the basic html elements along with that a place where we do render the <code> React Component</code>.\r\n        </p> \r\n        <i>\r\n            <b> Note</b> : Here we have created a custom application where we are just having required files/folders.\r\n        </i>\r\n        <br /> <br />\r\n        <div><strong> Below is the example of basic <code>Hello World Application. </code></strong>  \r\n        Here we just need only two files <code> index.js </code> and  <code> index.html </code> <br/>  \r\n        <span className=\"code-cursor\"> &#187; </span>   <code> index.html :</code> In this file we are having are metadata and one <code> div </code> with id=\"root\"; we need this to render our content in it. <br />\r\n        <span className=\"code-cursor\"> &#187; </span>  <code> index.js :</code> In this file we are having basic structure of <code> React Elements</code>. Elaborating further:\r\n                    <ul> \r\n                        <li>\r\n                            We are importing <code> React </code> from 'react' package such that we can make this as  <code> React Compatible</code>\r\n                        </li>\r\n                        <li>\r\n                            Importing <code> ReactDom </code> from 'react-dom' will help to create a <code> Document Object Model</code> which helps to render the content. \r\n                        </li>\r\n                        <li>\r\n                            Creating a constant with name <code> element </code> and assigning <code>  html content </code> along with <code> JavaScript elements</code>; called <code>JSX</code>.\r\n                        </li>\r\n                        <li>\r\n                            Finally calling <code> ReactDOM.render() </code> method to tell the React that we want to render the passed <code> element </code> inside passed <code> elementId (\"root\") </code>.\r\n                            As a result React will create a DOM for the passed parameters and display the content on browser. (Refer second screenshot)\r\n                        </li>\r\n                    </ul>\r\n        </div>\r\n        <div className=\"helloWorldPage\"> \r\n        <div> \r\n            <img src={helloWorld_Code} alt=\"Hello World Code\" /> \r\n        </div>\r\n        \r\n        <p><strong> Below is the UI of above code along with the inspection there we can see how DOM looks like:</strong> <br /> </p>\r\n        <p> You can download the sample code from here:  &nbsp; \r\n        <a href={customApp} target=\"_blank\" rel=\"noreferrer\" download> \r\n            <i className=\"bi bi-download\" /> \r\n        </a>  <br />\r\n        <small>  (Kindly run <code>npm install</code> first to install all packages and then <code> npm start</code> to view the app on browser)  </small>\r\n        </p>\r\n\r\n\r\n        <div>  \r\n            <img src={helloWorld_UI} alt=\"Hello World UI\" /> \r\n        </div> \r\n        </div>\r\n    </div> \r\n\r\n\r\n    ); \r\n }\r\n}\r\n","import React from 'react';\r\n\r\nexport class ReactLifecycleComponent extends React.Component{\r\n\r\n    render(){\r\n\r\n        const _template = (\r\n            <div>\r\n                <h4 className=\"content-heading\"> React Lifecycle </h4> \r\n                <p>\r\n                    We know that React is all about <code> Components</code>  hence we have to look towards it's lifecycle as well.   \r\n                    Lifecycle means some set of events/functions in which each and every <code> React Component</code>   goes through.   <br />\r\n                    There are few events which gets called during lifecycle of a <code> React Component</code>. \r\n                    Basically we can categorize lifecycle methods into three phases such as:  <br />\r\n                    <span className=\"code-cursor\"> &#187; </span><span className=\"theme-color-text\"> Mounting </span>   <br />\r\n                    <span className=\"code-cursor\"> &#187; </span><span className=\"theme-color-text\"> Updating </span>   <br />\r\n                    <span className=\"code-cursor\"> &#187; </span><span className=\"theme-color-text\"> UnMounting </span> \r\n                </p>\r\n                \r\n                <br />\r\n                <h5 className=\"theme-color-text\"> <b> Mounting </b>  </h5> \r\n                <p> Mounting means putting elements into the DOM. \r\n                    React has four built-in methods that gets called, in this order, when mounting a component: </p> \r\n                <p> \r\n                    <span className=\"code-cursor\"> &#187; </span> \r\n                    <code> constructor() </code>: The constructor() method is called before anything else, when the component is initiated, and it is the natural place to set up the initial state and other initial values.\r\n                    <br />\r\n                    <span className=\"code-cursor\"> &#187; </span> \r\n                    <code> getDerivedStateFromProps() </code>: \r\n                    <br />\r\n                    <span className=\"code-cursor\"> &#187; </span> \r\n                    <code> render() </code>: \r\n                    <br />\r\n                    <span className=\"code-cursor\"> &#187; </span> \r\n                    <code> componentDidMount() </code>: \r\n                </p>\r\n\r\n                <br />\r\n                <h5 className=\"theme-color-text\"> <b>  Updating </b></h5> \r\n                <p>  </p> \r\n                <p> \r\n                    <span className=\"code-cursor\"> &#187; </span> \r\n                    <code> getDerivedStateFromProps() </code>: \r\n                    <br />\r\n                    <span className=\"code-cursor\"> &#187; </span> \r\n                    <code> shouldComponentUpdate() </code>: \r\n                    <br />\r\n                    <span className=\"code-cursor\"> &#187; </span> \r\n                    <code> render() </code>: \r\n                    <br />\r\n                    <span className=\"code-cursor\"> &#187; </span> \r\n                    <code> getSnapshotBeforeUpdate() </code>: \r\n                    <br />\r\n                    <span className=\"code-cursor\"> &#187; </span> \r\n                    <code> componentDidUpdate() </code>: \r\n\r\n                </p>\r\n\r\n                <br />\r\n                <h5 className=\"theme-color-text\"> <b> UnMounting </b> </h5> \r\n                <p>  </p> \r\n                <p> \r\n                    <span className=\"code-cursor\"> &#187; </span> \r\n                    <code> componentWillUnmount() </code>: \r\n                    <br />\r\n                </p>\r\n\r\n            </div>\r\n\r\n        );\r\n\r\n\r\n        return _template;\r\n    }\r\n\r\n}","import {Component,React} from 'react';\r\n// import logo from '../assets/images/logo/learningStreetsLogo.png';\r\n// import reactStreetLogo from '../assets/images/logo/reactStreetLogo.png';\r\nimport routeData from '../assets/constantFiles/routeConstants';\r\n \r\nexport class HomeComponent extends Component{\r\n    render(){\r\n        return(\r\n          <div>\r\n                <div className=\"homePage-welcome-div col-md-12 pd0\">\r\n                  <div className=\"homePage-welcome-text\"> \r\n                      <div > \r\n                        {/* <img src={reactStreetLogo} alt=\"Learning Streets\" />    */}\r\n                      </div>  \r\n                      \r\n                      <div id=\"heading\">  \r\n                        <p>  Welcome to  </p>   <br />\r\n                          ReactJs  <br />\r\n                        <b> Street </b> <br /> \r\n                        <b id=\"motto\"> Learn &#124; Share | Help  </b>\r\n                        </div>   \r\n        \r\n                    \r\n                    </div> \r\n                </div> \r\n\r\n                <div  > \r\n                   <div className=\"homePage-quotes-div\">\r\n                    <p> \r\n                        <q>This street will make you understand the basics of <b> ReactJs</b> and help you to begin with it.</q>  \r\n                    </p> \r\n                  </div> \r\n\r\n                  <div className=\"homePage-content-div row col-md-12 pd0\">\r\n                      <div className=\"homePage-content-card col-md-4\">\r\n                        <p className=\"hpcc-heading\"> About Street</p>\r\n                        <p className=\"hpcc-description\"> \r\n                          Our goal is that each and every one who is interested to learn new things should get it without any cost.\r\n                          Towards this we are doing a bit from our side such that our knowledge and experience could be shared among all those who are seeking for it.\r\n                        </p>\r\n                      </div>\r\n\r\n                      <div className=\"homePage-content-card col-md-4\">\r\n                        <p className=\"hpcc-heading\"> Your Takeaway</p>\r\n                        <p className=\"hpcc-description\"> \r\n                          We are just like you with lots of zeal to learn new things. We are always ready for learning.\r\n                          In our family we have many people to contribute and we also welcome you to in our family.  \r\n                        </p>\r\n                      </div>\r\n\r\n                      <div className=\"homePage-content-card col-md-4\">\r\n                        <p className=\"hpcc-heading\"> Our Expectation</p>\r\n                        <p className=\"hpcc-description\"> \r\n                          Always have a zeal to <b>Learn</b>. \r\n                          Whatever you know it's good to <b>Share</b> with people and <b>Help</b> them whenever they need it.\r\n                          We will not loose anything by sharing something especially 'knowledge'.\r\n                        </p>\r\n                      </div>\r\n                  </div>\r\n\r\n                  <div className=\"homePage-content-div col-md-12 pd0\">\r\n                      <div className=\"homePage-content-card\">\r\n                        <p className=\"hpcc-heading\"> Learning Content </p>\r\n                        <div className=\"hpcc-learningContent\">  \r\n                          {routeData.map(_item => \r\n                              <div className=\"row col-md-12 pd0\" key={_item.routeKey}>\r\n                                <div className=\"pageText col-md-4\"> {_item.routeLinkText} </div> \r\n                                <div className=\"col-md-8\"> {_item.routeLinkDescription} </div> \r\n                              </div> \r\n                          )}\r\n\r\n                          <br /> \r\n                          <i >\r\n                            <b> Note</b> : Kindly use above <code> Menu Icon (<i className=\"bi bi-list\"></i>)</code> at top-left corner to read more about the content.\r\n                          </i>\r\n                         </div>   \r\n                      </div>\r\n                  </div>\r\n                </div>\r\n          </div>\r\n        )\r\n    }\r\n\r\n\r\n    // goToSiteContent = () =>{\r\n\r\n    //   <Route render={({ history}) => (\r\n    //     <button\r\n    //       type='button'\r\n    //       onClick={() => { history.push('/new-location') }}\r\n    //     >\r\n    //       Click Me!\r\n    //     </button>\r\n    //   )} />\r\n\r\n    // }\r\n}","import {HashRouter as Router, Switch, Route} from 'react-router-dom';\r\n// importing constant file to read the links\r\nimport routeData from './assets/constantFiles/routeConstants';\r\nimport { HomeComponent } from './components/homeComponent';\r\n\r\n// Importing Component\r\n  // import { HomeComponent } from './components/homeComponent';\r\n\r\n\r\nexport const AppRoute= () => {\r\n    return (\r\n        <Router>\r\n            <Switch>  \r\n                {routeData.map(_item => \r\n                        <Route key={_item.routeKey}  path={_item.routePath} component={_item.routeComponent} />\r\n                )}\r\n                {/* Default Route */}\r\n                <Route exact path='/' component={HomeComponent} /> \r\n          </Switch>\r\n        </Router>\r\n     \r\n    );\r\n}","import React from 'react';\r\nimport {HashRouter as Router, NavLink } from 'react-router-dom';\r\nimport routeData from '../assets/constantFiles/routeConstants';\r\n\r\nexport default class AppMenuComponent extends React.Component{\r\n\r\nrender() {\r\n\r\n const _template = (\r\n    <Router> \r\n        <div className=\"menu-list-content\">\r\n\r\n        <NavLink className=\"menu-home\" onClick={() => this.hideMenuList(\"Home\")}  exact to={\"/\"}   >\r\n            <i className=\"bi bi-house  theme-color-text\" > </i> \r\n        </NavLink>\r\n            <i className=\"bi bi-x-circle close-menu\" onClick={() => this.hideMenuList(\"\")}></i>\r\n        <ul>\r\n\r\n            {routeData.map(_item => \r\n                <li key={_item.routeKey}>\r\n                    <NavLink onClick={() => this.hideMenuList(_item.routeLinkText)}  exact to={_item.routePath}   activeClassName=\"menu-list-a-active\" >\r\n                        {_item.routeLinkText} \r\n                    </NavLink>\r\n                </li> \r\n            )}\r\n        </ul>\r\n        </div>\r\n    </Router>\r\n )\r\n\r\n return _template;\r\n\r\n}\r\n\r\n// Below method is being called to hide menu\r\nhideMenuList = (_routeLinkText) => {\r\n    var list_container = document.getElementById(\"menu-list-container\"); \r\n        list_container.classList.add(\"menu-list-hide\");\r\n        list_container.classList.remove(\"menu-list-show\");\r\n        // removing blocked class to helper_div div such that user can access other elements\r\n        document.getElementById(\"menu-render-helper-div\").classList.remove(\"action-blocked\");\r\n        \r\n        //below will set the view on top\r\n        document.body.scrollTop = 0; // For Safari\r\n        document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n        \r\n        // sending current route text to parent component\r\n        if(_routeLinkText !== \"\") {\r\n        this.props.ActiveRouteText(_routeLinkText);\r\n        }\r\n    } \r\n}\r\n\r\n\r\n \r\n\r\n","import { React, Component} from 'react';\r\nimport buildInfo from '../assets/constantFiles/buildInfo.json'; \r\n\r\n//import AddFeedback from '../nodeJs/addFeedback';\r\n\r\nclass AppFooterComponent extends Component{\r\n\r\n    render() {\r\n        const _template = (\r\n        <div>\r\n            <footer className=\"App-footer\">\r\n            \r\n            <div className=\"content-width\">\r\n            <div className=\"row col-md-12 content-width\">\r\n                    <div  className=\"col-md-5\">\r\n                    <br />\r\n                        <span className=\"footer-subheading\">   Pleased to listen from you </span> \r\n                        <input type=\"text\" className=\"feedback-inputBox\" placeholder=\"Please write your good name\" maxLength=\"25\" />\r\n                        <textarea className=\"feedback-textarea\" placeholder=\"Please share your feedback\" maxLength=\"350\"   />   \r\n                        \r\n                    </div>\r\n                    <div  className=\"col-md-1 feedback-sendBtnContainer\">  \r\n                    <div onClick={this.getFeedback}  className=\"feedback-sendBtn1\"> \r\n                            <div className=\"feedback-sendBtn2\"> \r\n                            </div>\r\n                        </div> \r\n                    </div> \r\n                \r\n                    <div  className=\"row col-md-6\">\r\n                    <div className=\"col-md-6 otherStreet\"> \r\n                    <br />\r\n                    <span className=\"footer-subheading\">   Other Streets </span> \r\n\r\n                    <ul>\r\n                        <li>\r\n                            <a  href=\"https://learningstreets.github.io/ReactJsStreet\" target=\"_blank\" rel=\"noreferrer\">\r\n                            ReactJs Street\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a  href=\"https://learningstreets.github.io/ReactJsStreet\" target=\"_blank\" rel=\"noreferrer\">\r\n                            Angular Street\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a  href=\"https://learningstreets.github.io/ReactJsStreet\" target=\"_blank\" rel=\"noreferrer\">\r\n                            Dot Net Core Street\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a  href=\"https://learningstreets.github.io/ReactJsStreet\" target=\"_blank\" rel=\"noreferrer\">\r\n                            Python Street\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"https://learningstreets.github.io/ReactJsStreet\" target=\"_blank\" rel=\"noreferrer\">\r\n                            Java Street\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"https://learningstreets.github.io/ReactJsStreet\" target=\"_blank\" rel=\"noreferrer\">\r\n                            C# Street\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                    \r\n                    </div>\r\n                    <div className=\"col-md-6 contactUs\"> \r\n                    <br />\r\n                    <span  className=\"footer-subheading\">   Contact Us </span> \r\n\r\n                    <ul>\r\n                        <li>\r\n                            +91-90xxxxxxx\r\n                        </li>\r\n                        <li>\r\n                            streetsxxxxx@gmail.com\r\n                        </li>\r\n                    </ul>\r\n                    </div>\r\n                </div> \r\n                </div> \r\n            </div>   \r\n\r\n             <div className=\"col-md-12 footer-getCode\">   \r\n                <div className=\"content-width\"  > \r\n                    <a className=\"sourceCode-button\" href=\"https://github.com/LearningStreets/ReactJsStreet/tree/main\" target=\"_blank\" rel=\"noreferrer\">\r\n                            Get the source code &#60;/&#62;  \r\n                    </a> \r\n                    <br /> <br />\r\n                    <small className=\"footer-buildVersion\"> App Version:  {buildInfo.buildMajor +'.' + buildInfo.buildMinor +'.' + buildInfo.buildRevision +'  | '+ buildInfo.buildTag }</small>\r\n                </div>\r\n            </div>  \r\n            \r\n            </footer>\r\n        </div>\r\n        )\r\n\r\n        return _template;\r\n    }\r\n\r\n\r\n    \r\n\r\n   getFeedback = () => {\r\n\r\n    //AddFeedback(\"Hardcoded\", \"This is also Hardcoded\");\r\n    \r\n   // AddFeedback(\"Method\", \"By Method\");\r\n \r\n    //const editJsonFile = require(\"edit-json-file\");\r\n    // If the file doesn't exist, the content will be an empty object by default.\r\n    //let file = editJsonFile('../assets/feedbackData.json');\r\n\r\n    //var fs = require('browserify-fs');\r\n   // fs.readFile('../assets/feedbackData.json');\r\n\r\n    //You can even append objects\r\n    //file.append(\"feedbackData\", { userName: \"From Form\", userFeedback: \"Good\" });\r\n    //console.log(fs);\r\n\r\n    //if you want to remove the last element from an array use pop\r\n    //file.pop(\"classes\")\r\n    // Save the data to the disk\r\n    //file.save();\r\n    // Output the whole thing\r\n    //console.log(file.toObject());\r\n\r\n }\r\n}\r\n\r\n\r\n\r\nexport default AppFooterComponent\r\n\r\n ","export default __webpack_public_path__ + \"static/media/reactStreetLogo.20be608d.png\";","import {Component, React} from 'react';\r\n// import logo from '../assets/images/logo/learningStreetsLogo.png';\r\nimport reactStreetLogo from '../assets/images/logo/reactStreetLogo.png';\r\n\r\n// importing app name from constant file\r\nimport { AppName }  from '../assets/constantFiles/appConstants';\r\n\r\nexport class AppHeaderComponent extends Component{\r\n  \r\n\r\n    // --theme-color: purple;\r\n    // --header-footer-bg-color: #282c34;\r\n    // --card-bg-color: rgba(128, 0, 128, 0.25);\r\n    // --card-border-color: rgba(128, 0, 128, 0.8); \r\n\r\n\r\n    state={\r\n        themePurple: 'purple',\r\n        themePurple_card_bgc: 'rgba(128, 0, 128, 0.2)',\r\n        themePurple_card_bc: 'rgba(128, 0, 128, 0.2)',\r\n        themeGreen: 'green',\r\n        themeGreen_card_bgc: 'rgba(0, 128, 0, 0.2)',\r\n        themeGreen_card_bc: 'rgba(0, 128, 0, 0.8)',\r\n        themeOrangeRed: 'orangered',\r\n        themeOrangeRed_card_bgc: 'rgba(255, 68, 0, 0.2)',\r\n        themeOrangeRed_card_bc: 'rgba(255, 68, 0, 0.8)',\r\n        themeHotPink: '#e83e8c',\r\n        themeHotPink_card_bgc: '#e83e8d38',\r\n        themeHotPink_card_bc: '#e83e8dcc'\r\n    }\r\n\r\n\r\n    setTheme = (event, _theme) => {\r\n       // console.log(event.target); \r\n        document.documentElement.style.setProperty('--theme-color',  this.state[_theme]);\r\n        document.documentElement.style.setProperty('--card-bg-color',  this.state[_theme + \"_card_bgc\"]);\r\n        document.documentElement.style.setProperty('--card-border-color',  this.state[_theme + \"_card_bc\"]);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        \r\n            // <div className=\"App-header-div row col-md-12\"> \r\n            <div className=\"App-header-div\"> \r\n            <div className=\"content-width\" style={{\"display\":\"flex\"}}> \r\n                    <img src={reactStreetLogo}   className=\"App-logo\" alt=\"logo\" />  \r\n                    <span className=\"App-heading\">  {AppName} <br/> <b> Street   </b>   \r\n                    </span>  \r\n                \r\n\r\n                <div className=\"social-media-div\" > \r\n                    <span >\r\n                        <i className=\"bi bi-facebook\"></i> \r\n                        <i className=\"bi bi-twitter\"></i>  \r\n                    </span> \r\n                </div> \r\n\r\n                \r\n\r\n                {/* <div className=\"App-heading-div\"> \r\n                    <span className=\"App-heading\">  {AppName}  <br />\r\n                        <span className=\"theme-color-text\"> Street </span>  \r\n                    </span> \r\n                </div>   */}\r\n            </div>\r\n            </div>\r\n\r\n                /* <div className=\"App-theme-btn-div col-md-2\">  \r\n                    <span style={{'backgroundColor': this.state.themeOrangeRed}} onClick={(event)=> this.setTheme(event, \"themeOrangeRed\")} />\r\n                    <span style={{'backgroundColor': this.state.themeHotPink}} onClick={(event)=> this.setTheme(event, \"themeHotPink\")} />\r\n                    <span style={{'backgroundColor': this.state.themeGreen}} onClick={(event)=> this.setTheme(event, \"themeGreen\")} />\r\n                    <span style={{'backgroundColor': this.state.themePurple}} onClick={(event)=> this.setTheme(event, \"themePurple\")} />\r\n                </div>    */\r\n        \r\n        );\r\n    }\r\n}","\r\n export const AppName = 'ReactJs';\r\n","import React, { Component } from 'react';\nimport {AppRoute} from './Route';\n\nimport AppMenuComponent from './components/appMenuComponent';\nimport AppFooterComponent from './components/appFooterComponent';\nimport {AppHeaderComponent} from './components/appHeaderComponent';\n// import {HomeComponent} from './components/homeComponent';\n\n\n\nclass App extends Component{\n\n  state={\n    activeRouteLinkText : \"Home\"\n}\n\n  render() \n  {\n    \n    return (\n      <div>\n          <div id=\"thisSiteContentDiv\"> \n\n              {/* displaying app header */}\n            <AppHeaderComponent />\n            <div className=\"content-width\">\n                <div id=\"menuDiv\" className=\"open-menu-div\"> \n                  <i className=\"bi bi-list open-menu\" onClick={this.changeCss} ></i>  \n                  <i className=\"bi bi-chevron-compact-right menu-chevron\" ></i>  \n                    {this.state.activeRouteLinkText === \"Home\" ? \n                    // <i className=\"bi bi-house menu-home theme-color-text\" ></i>\n                    <span className=\"menu-route-text\"> Welcome to ReactJs Street </span>: \n                    <span className=\"menu-route-text\"> { this.state.activeRouteLinkText}   </span> \n                    }\n                  \n                \n                {/* with the help of bootstrap css dividing the content into columns */}\n                {/* <div className=\"row col-md-12\"> */}\n                \n                  <div id=\"menu-render-helper-div\" className=\"action-unblocked\"></div>\n                  <div  id=\"menu-list-container\" className=\"col-md-3 menu-list-hide\">\n                    \n                      {/* displaying app menu */}\n                      <AppMenuComponent ActiveRouteText={this.getActiveRouteLinkText} />\n                  </div>\n\n\n                  </div>\n\n              </div>\n            \n            <div className=\"col-md-12 pd0 content-width\">\n                <div className=\"router-container\"> \n                  {/* here the content of other page will get displayed */}\n                  <AppRoute /> \n                </div>\n            </div> \n            \n            {/* displaying app footer */}\n            <AppFooterComponent /> \n          </div>\n         \n      </div>\n         \n      ); \n  }\n\n  // creating call back function to get the active route link text from Menu Component\n  getActiveRouteLinkText = (_newText) => {\n    this.setState({activeRouteLinkText: _newText})\n  }\n\n  componentDidMount() {\n\n    var menuDiv = document.getElementById(\"menuDiv\");\n    var sticky = menuDiv.offsetTop;\n    document.addEventListener('scroll', () => {\n        if(window.pageYOffset > sticky) {\n          menuDiv.classList.add(\"stickyMenuDiv\");\n        }\n\n        else {\n          menuDiv.classList.remove(\"stickyMenuDiv\");\n        }\n       \n    });\n  }\n\n\n  // componentDidMount() {\n  //   // {this.checkActiveRouteLinkText()}\n  // }\n\n  // checkActiveRouteLinkText = () => {\n  //   if(this.state.activeRouteLinkText === \"Home\")\n  //    {\n  //     var firstLandingPageDiv = document.getElementById(\"firstLandingPageDiv\");\n  //     if (firstLandingPageDiv.classList.contains(\"displayNone\")){\n  //       firstLandingPageDiv.classList.remove(\"displayNone\");\n  //     }\n\n  //     document.getElementById(\"thisSiteContentDiv\").classList.add(\"displayNone\");\n  //    }\n  //    else\n  //    {\n\n  //     var thisSiteContentDiv = document.getElementById(\"thisSiteContentDiv\");\n  //     if (thisSiteContentDiv.classList.contains(\"displayNone\")){\n  //       thisSiteContentDiv.classList.remove(\"displayNone\");\n  //     }\n  //     document.getElementById(\"firstLandingPageDiv\").classList.add(\"displayNone\"); \n\n  //    }\n  // }\n\n  // in the below method we are checking the css and applying additional css on the basis of checks\n  changeCss = () => {\n\n    var list_container = document.getElementById(\"menu-list-container\");\n    var helper_div = document.getElementById(\"menu-render-helper-div\");\n \n    if (list_container.classList.contains(\"menu-list-hide\")){\n          list_container.classList.remove(\"menu-list-hide\");\n          list_container.classList.add(\"menu-list-show\");\n          // adding blocked class to helper_div div such that user can't access other elements\n          helper_div.classList.add(\"action-blocked\");\n    }\n\n    else{\n      list_container.classList.remove(\"menu-list-show\");\n      list_container.classList.add(\"menu-list-hide\");\n      // removing blocked class to helper_div div such that user can access other elements\n      helper_div.classList.remove(\"action-blocked\");\n    }\n \n}\n}\n export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root') \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}