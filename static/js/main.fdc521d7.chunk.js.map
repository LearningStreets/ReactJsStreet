{"version":3,"sources":["assets/appConstants.jsx","components/homeComponent.jsx","assets/images/folderAndFileStructure.png","components/folderAndFileDetailsComponent.jsx","components/passingDataComponent.jsx","components/howReactWorksComponent.jsx","components/functionComponent.jsx","components/classComponent.jsx","components/stateAndPropsComponent.jsx","assets/appDataContents.jsx","components/bestCodingPracticesComponent.jsx","components/reactFundamentalsComponent.jsx","components/eventHandlingComponent.jsx","components/feedbackComponent.jsx","components/jsxComponent.jsx","assets/images/helloWorld_Code.png","assets/images/helloWorld_UI.png","assets/downloadFiles/custom-app.zip","components/helloWorldComponent.jsx","components/reactLifecycleComponent.jsx","Route.jsx","components/appMenuComponent.jsx","components/appFooterComponent.jsx","logo.svg","components/appHeaderComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["routeLinks","HomeComponent","className","href","target","rel","Component","FolderAndFileDetailsComponent","src","folderAndFileStructureImage","alt","PassingDataBetweenComponent","ParentFunctionComponent","readOnly","value","style","ChildFunctionComponent","parentText","ParentClassComponent","ChildClassComponent","this","props","C2PParentClassComponent","state","dataFromChild","getDataFromChildCallBackFunction","dtFromChild","setState","parentCallBack","C2PChildClassComponent","sendDataToParent","onClick","HowReactWorksComponent","msgToChild","FunctionComponent","ClassComponent","StateAndPropsComponent","msg","bestPracticeContent","Heading","Description","reactFundamentalsContent","BestCodingPracticesComponent","map","content","ReactFundamentalsComponent","EventHandlingComponent","counter","buttonType","IncrementCounter","DecrementCounter","printButtonType","_buttonType","formatCount","type","FeedBackComponent","FeedBackData","feedbackData","feedData","userName","userFeedback","feedbackCount","JSXComponent","HelloWorldComponent","helloWorld_Code","customApp","download","helloWorld_UI","ReactLifecycleComponent","React","AppRoute","exact","path","component","appConsts","AppMenuComponent","to","activeClassName","AppFooterComponent","getFeedback","placeholder","maxLength","buildInfo","buildMajor","buildMinor","buildRevision","buildTag","AppHeaderComponent","themePurple","themePurple_card_bgc","themePurple_card_bc","themeGreen","themeGreen_card_bgc","themeGreen_card_bc","themeOrangeRed","themeOrangeRed_card_bgc","themeOrangeRed_card_bc","themeHotPink","themeHotPink_card_bgc","themeHotPink_card_bc","setTheme","event","_theme","document","documentElement","setProperty","logo","width","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fdc521d7.chunk.js","sourcesContent":["\r\nexport const routeLinks = {\r\n\r\n    FolderAndFileDetails : '/FolderAndFileDetails',\r\n    HowReactWorks : '/HowReactWorks',\r\n    FunctionComponent : '/FunctionComponent',\r\n    ClassComponent : '/ClassComponent',\r\n    StateAndProps : '/StateAndProps',\r\n    BestCodingPractices : '/BestCodingPractices',\r\n    ReactFundamentals : '/ReactFundamentals',\r\n    EventHandling: '/EventHandling',\r\n    PassingDataBetweenComponents: '/PassingDataBetweenComponents',\r\n    FeedBack : '/FeedBack',\r\n    JSX : '/JSX',\r\n    HelloWorld : '/HelloWorld',\r\n    ReactLifecycle:'/ReactLifecycle'\r\n}\r\n\r\n export const AppName = 'ReactJs Street';\r\n    \r\n \r\n\r\n ","import {Component,React} from 'react'\r\n\r\n \r\nexport class HomeComponent extends Component{\r\n    render(){\r\n        return(\r\n          <div>\r\n              {/* <h4 style={{ \"text-align\":'center' }} > This is the 'Hello React' application.  </h4> */}\r\n                <h4 className=\"content-heading\"> About ReactJs </h4> \r\n                <p> \r\n                <span className=\"code-cursor\"> &#187; </span>  <code> React </code> is a JavaScript library for building user interface.   <br />\r\n                <span className=\"code-cursor\"> &#187; </span>  <code> React </code>  is used to build single page applications.   <br />  \r\n                <span className=\"code-cursor\"> &#187; </span>  <code> React </code>  is rich in terms of reusability.\r\n                </p>\r\n                <p>  Reference Link:  <a href=\"https://reactjs.org/\" target=\"_blank\" rel=\"noreferrer\"> ReactJs</a>  <br />\r\n                  <small> \r\n                    (check out the link to get more info about ReactJs and to learn basic concepts. Anyhow this site also covers some important concepts such that you can start with React.)\r\n                  </small>\r\n                </p>\r\n                <br /> \r\n\r\n                <h5 className=\"content-heading\"> Why ReactJs? </h5> \r\n                <p> \r\n                <code> React </code> is very beneficial in terms of rendering, understandability, performance and manageability.\r\n                </p>\r\n\r\n                <p> \r\n                <span className=\"code-cursor\"> &#187; </span>  <code> Virtual DOM </code>:\r\n                  What is DOM? DOM stands for <code> Document Object Model</code>. As name says; \r\n                  A Model which holds all the Objects of all the elements of an HTML document.\r\n                  So, this DOM gives a power to JavaScript such that it can access and change all the HTML elements. \r\n                  Same logic is being used in <code> React </code>, but here we have Virtual DOM, which helps in fast rendering. \r\n                  How? As application loads, a DOM gets created, Traditionally if any changes happens to HTML element, accordingly full DOM gets updated but \r\n                  in the case of React it only updates the required portion rest of the DOM remains same.    <br />\r\n                <span className=\"code-cursor\"> &#187; </span>  <code> Reusable Components </code>:  <code> React </code> has a ability to have many small components which helps to modular programming and enhance the reusability.   <br />  \r\n                <span className=\"code-cursor\"> &#187; </span>  <code> Traditional JavaScript </code>: <code> React </code> uses traditional JavaScript hence it is easy to learn but its recommendable to use <code> JSX </code> which is advanced version of JavaScript.\r\n                </p>\r\n                <br /> \r\n\r\n                <h5 className=\"content-heading\"> Installation Guide </h5> \r\n                <p> Lets install <code> NodeJs </code> such that we can work with that and also it will install <code> npm (Node Package Manager)</code> which will help us to install react packages.  </p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>  Reference Link:  <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noreferrer\"> nodejs</a> <br />\r\n                <small>(check out the link to get more about nodejs and installation setup.) </small>\r\n                </p>\r\n                <p> To begin with ReactJs we need a package manager (which we already installed - npm) such that we can install required packages. So to begin with we have to install below package to create a new React app.  </p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span> Package Name: <a href=\"https://www.npmjs.com/package/create-react-app\" target=\"_blank\" rel=\"noreferrer\"> create-react-app</a> <br />\r\n                    <small> (As we are new in React hence we are using this package to create the React App. Once will get to know about the basic requirements of React App then we should be able to create it without help of this package.)</small>\r\n                </p>\r\n                <p>  <span className=\"code-cursor\"> &#187; </span>  Reference Link: <a href=\"https://reactjs.org/docs/create-a-new-react-app.html\" target=\"_blank\" rel=\"noreferrer\"> create-a-new-react-app</a> </p>\r\n                <p>  <span className=\"code-cursor\"> &#187; </span>  IDE: We can use any IDE which supports reactJs development. Here we are using light weighted IDE <a href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"noreferrer\">VS Code</a>.\r\n                <br /><small> (Once you install the VS Code, do add these extensions: Simple React Snippets, Prettier - Code formatter) </small>\r\n                 </p>\r\n                <br /> \r\n\r\n                <h5 className=\"content-heading\"> Helpful Commands </h5> \r\n                <p> Run the below commands over cmd and point to the working directory.  </p>\r\n                <p>  <span className=\"code-cursor\"> &#187; </span><b> npm install create-react-app : </b> This package installation will help to create a react js app.</p>\r\n                <p>  <span className=\"code-cursor\"> &#187; </span><b> create-react-app hello-react: </b> Here we are creating a react app with the name of 'hello-react'.</p>\r\n                <p>  <span className=\"code-cursor\"> &#187; </span><b> hello-react&gt; npm start : </b> Starting the newly created react app which will run on the 3000 port. <a href=\"http://localhost:3000\" target=\"_blank\" rel=\"noreferrer\"> localhost:3000</a></p>\r\n                <br />\r\n                <p>  <b> Note : </b> We can also create ReactJs app without create-react-app package and for that we have to manually add all the required files.</p>\r\n                <br /><br />\r\n          </div>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/folderAndFileStructure.635ea9e1.png\";","import {Component,React} from 'react';\r\n\r\nimport folderAndFileStructureImage from '../assets/images/folderAndFileStructure.png';\r\n \r\n \r\nexport class FolderAndFileDetailsComponent extends Component{\r\n\r\n    render(){\r\n\r\n        return(\r\n\r\n        <div className=\"row col-md-12\">\r\n          <div className=\"col-md-12\">\r\n          <p> Once you create an app with the help of create-react-app package and open that folder in IDE you will see this file and folder structure. \r\n            <br /><small>  (This screenshot also includes some custom folders. will explain further.) </small></p>\r\n          </div>\r\n            <div className=\"col-md-4\">\r\n              <img className=\"folderAndFileStructureImage\" src={folderAndFileStructureImage} alt=\"folder and file structure\" />\r\n              </div>\r\n            <div className=\"col-md-8 \"> \r\n               \r\n                <div> \r\n                  <span className=\"code-cursor\"> &#187; </span>\r\n                  <b className=\"theme-color-text\"> node_modules: </b> This is the folder which holds all the packages. <br />  \r\n                  \r\n                  <span className=\"code-cursor\"> &#187; </span>\r\n                  <b className=\"theme-color-text\"> node_modules: </b> This is the folder which holds all the packages. <br />    \r\n\r\n                  <span className=\"code-cursor\"> &#187; </span>    \r\n                  <b className=\"theme-color-text\"> public: </b>  This is the folder info. <br />\r\n                  \r\n                  <div className=\"pd1-5rem-left\"> \r\n                  <span className=\"code-cursor\"> &#187; </span>    \r\n                  <b> favicon.ico: </b>  This is the file info.  <br />\r\n\r\n                  <span className=\"code-cursor\"> &#187; </span>   \r\n                  <b className=\"theme-color-text\"> index.html: </b>  This is the file info.  <br />\r\n\r\n                  <span className=\"code-cursor\"> &#187; </span>   \r\n                  <b className=\"theme-color-text\"> manifest.json: </b>  manifest.json provides metadata used when your web app is installed on a user's mobile device or desktop.  <br />\r\n                  </div>\r\n\r\n                  <span className=\"code-cursor\"> &#187; </span>   \r\n                  <b className=\"theme-color-text\"> src: </b>  This is the folder info. <br /> \r\n\r\n                  <div className=\"pd1-5rem-left\">  \r\n                    <span className=\"code-cursor\"> &#187; </span>   \r\n                    <b className=\"theme-color-text\"> assets: </b>  This is the folder info.  <br />\r\n\r\n                    <span className=\"code-cursor\"> &#187; </span>   \r\n                    <b className=\"theme-color-text\"> components: </b>  This is the folder info.  <br />\r\n\r\n                    <span className=\"code-cursor\"> &#187; </span>   \r\n                    <b className=\"theme-color-text\"> App.js: </b>  This is the file info.  <br />\r\n\r\n                    <span className=\"code-cursor\"> &#187; </span>   \r\n                    <b> App.css: </b>  This is the file info.  <br />\r\n\r\n                    <span className=\"code-cursor\"> &#187; </span>   \r\n                    <b> App.test.js: </b>  This is the file info.  <br />\r\n\r\n                    <span className=\"code-cursor\"> &#187; </span>   \r\n                    <b className=\"theme-color-text\"> index.css: </b>  This is the file info.  <br />\r\n\r\n                    <span className=\"code-cursor\"> &#187; </span>   \r\n                    <b className=\"theme-color-text\"> index.js: </b>  This is the file info.  <br />\r\n\r\n                    <span className=\"code-cursor\"> &#187; </span>   \r\n                    <b> logo.svg: </b>  This is the file info.  <br />\r\n\r\n                    <span className=\"code-cursor\"> &#187; </span>   \r\n                    <b> reportWebVitals.js: </b>  This is the file info.  <br />\r\n\r\n                    <span className=\"code-cursor\"> &#187; </span>   \r\n                    <b className=\"theme-color-text\"> Route.js: </b>  This is the file info.  <br />\r\n\r\n                    <span className=\"code-cursor\"> &#187; </span>   \r\n                    <b> setupTests.js.js: </b>  This is the file info.  <br />\r\n                  </div>\r\n\r\n                  <span className=\"code-cursor\"> &#187; </span>   \r\n                  <b className=\"theme-color-text\"> .gitignore: </b>  This is the file info.  <br />\r\n\r\n                  <span className=\"code-cursor\"> &#187; </span>   \r\n                  <b className=\"theme-color-text\"> package-lock.json: </b>  This is the file info.  <br />\r\n\r\n                  <span className=\"code-cursor\"> &#187; </span>   \r\n                  <b className=\"theme-color-text\"> package.json: </b>  This is the file info.  <br />\r\n\r\n                  <span className=\"code-cursor\"> &#187; </span>   \r\n                  <b> README.md: </b>  This is the file info.  <br />\r\n                  \r\n                  \r\n                </div>\r\n            \r\n            </div>\r\n        \r\n          </div>\r\n        )\r\n    }\r\n}","import { Component, React} from 'react';\r\n\r\n \r\n\r\nclass  PassingDataBetweenComponent extends Component {   \r\n\r\n    render() { \r\n\r\n const _p2cUsingFCHtmlString = ( \r\n`// Creating function component for parent and passing text to child FunctionComponent\r\nfunction ParentFunctionComponent() {\r\n    const _parentTemplate = (\r\n       <div style={{'border':'1px solid purple', 'padding':'1rem'}}> \r\n           <h3> This is Parent Component</h3>\r\n           <ChildComponent parentText=\"This is the text from Parent Function Component\" />\r\n       </div> \r\n    )\r\n    return _parentTemplate;\r\n   }\r\n   \r\n   // Creating function component for child and printing text from parent function component\r\n   function ChildFunctionComponent({parentText}) {\r\n       const _childTemplate = ( \r\n           <div style={{'border':'1px solid orange', 'padding':'1rem'}}> \r\n               <h4> This is Child Component</h4>\r\n               <h5> Got this text from parent component:  <strong> {parentText}  </strong> </h5>\r\n           </div> \r\n        )\r\n   \r\n    return _childTemplate;\r\n   }\r\n`\r\n)\r\n\r\nconst _p2cUsingCCHtmlString = ( \r\n `// Creating class component for parent and passing text to child class component\r\nclass ParentClassComponent extends Component{\r\n    render() {\r\n        const _parentTemplate = (\r\n        <div style={{'border':'1px solid purple', 'padding':'1rem'}}> \r\n            <h3> This is Parent Component</h3>\r\n            <ChildClassComponent parentText=\"This is the text from Parent Class Component\" />\r\n        </div> \r\n        )\r\n        return _parentTemplate;\r\n    }\r\n}\r\n   \r\n// Creating class component for child and printing text from parent class component\r\nclass ChildClassComponent extends Component {\r\n\r\n    render() {\r\n        const _childTemplate = ( \r\n            <div style={{'border':'1px solid orange', 'padding':'1rem'}}> \r\n                <h4> This is Child Component</h4>\r\n                <h5> Got this text from parent component: <strong> {this.props.parentText}  </strong></h5>\r\n            </div> \r\n        )\r\n    \r\n        return _childTemplate;\r\n    }\r\n}\r\n\r\n `\r\n )    \r\n \r\n \r\n const _p2NcUsingCCHtmlString = ( \r\n` // Try adding any tag as a nested child\r\n<ChildClassComponent parentText=\"This is the text from Parent Class Component\" >\r\n    <strong> I am nested children </strong>\r\n</ChildClassComponent>\r\n\r\n\r\n// In the Child component add below line, 'this.props.children' here children is a default property\r\n<h5> Nested Child: <strong> {this.props.children}  </strong></h5>\r\n`\r\n )    \r\n\r\n\r\n const _c2PUsingClassComponent = (\r\n\r\n`// Creating class component for parent and passing text to child class component\r\nclass C2PParentClassComponent extends Component{\r\n    // Let's create a variable to store the data from child component\r\n    state={\r\n        dataFromChild : \"Default text in parent component itself\"\r\n    }\r\n\r\n    // we have to create a call back function here such that we can retrieve data from child via that function\r\n    getDataFromChildCallBackFunction = (dtFromChild) => {\r\n        // update the state variable\r\n        this.setState({dataFromChild : dtFromChild});\r\n    }\r\n\r\n    render() {\r\n        const _parentTemplate = (\r\n        <div style={{'border':'1px solid purple', 'padding':'1rem'}}> \r\n            <h3> This is Parent Component</h3>\r\n            <C2PChildClassComponent \r\n            parentText=\"This is the text from Parent Class Component\" \r\n            parentCallBack={this.getDataFromChildCallBackFunction} /> <br/>\r\n            Data received from child component: <strong> {this.state.dataFromChild}</strong>\r\n        </div> \r\n        )\r\n        return _parentTemplate;\r\n    }\r\n}\r\n   \r\n// Creating class component for child and printing text from parent class component\r\nclass C2PChildClassComponent extends Component {\r\n\r\n    sendDataToParent = ()=>{\r\n        // assigning value to the call back function\r\n        this.props.parentCallBack(\"Sending data from child component\");\r\n    }\r\n\r\n    render() {\r\n        const _childTemplate = ( \r\n            <div style={{'border':'1px solid orange', 'padding':'1rem'}}>   \r\n                <h4> This is Child Component</h4>\r\n                <h5> Got this text from parent component: <strong> {this.props.parentText}  </strong></h5> \r\n                <button className=\"btn btn-primary\" onClick={this.sendDataToParent} > Send data to parent component</button> \r\n            </div> \r\n        )\r\n    \r\n        return _childTemplate;\r\n    }\r\n}\r\n\r\n`\r\n )\r\n \r\n \r\n        const _template = (\r\n            <div> \r\n                <h4 className=\"content-heading\"> Passing Data From Parent To Child </h4> \r\n                <p> There are two approaches to achieve this</p>\r\n                <p> 1. Passing the property using <code> Function Components</code> </p>\r\n                <p> 2. Using <code>props</code> (works with <code>Class Components</code>) </p>\r\n               \r\n                \r\n                <h4 className=\"content-heading\"> Parent To Child: Using Function Component </h4>  \r\n                <div> \r\n                   <ParentFunctionComponent  />\r\n                </div> <br /> \r\n                <textarea className=\"code-snippet-textarea\"  readOnly value={_p2cUsingFCHtmlString} /> <br /> <br /> \r\n        \r\n                <h5 className=\"content-heading\"> Code Explanation </h5>  \r\n                <p> <span className=\"code-cursor\"> &#187; </span>  \r\n                <code>  &#60;ChildComponent parentText=\"This is the text from parent\" /&#62;  </code>: \r\n                Passing the data from parent to child components</p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>  \r\n                <code>  function ChildComponent(&#123; parentText  &#125;)  &#125;   </code>: \r\n                Passing property to child component </p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>\r\n                <code>  This is the text from parent: &#123; parentText  &#125; </code>: \r\n                Using property to show case the value </p>\r\n\r\n\r\n                <br />\r\n                <h4 className=\"content-heading\"> Parent To Child: Using Class Component </h4>  \r\n                <div> \r\n                   <ParentClassComponent  />\r\n                </div> <br /> \r\n                <textarea className=\"code-snippet-textarea\"  readOnly value={_p2cUsingCCHtmlString} /> <br /> <br /> \r\n        \r\n                <h5 className=\"content-heading\"> Code Explanation </h5>  \r\n                <p> <span className=\"code-cursor\"> &#187; </span>  \r\n                <code>  &#60;ChildComponent parentText=\"This is the text from parent\" /&#62;  </code>: \r\n                Passing the data from parent to child components</p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>  \r\n                <code>  function ChildComponent(&#123; parentText  &#125;)  &#125;   </code>: \r\n                Passing property to child component </p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>\r\n                <code>  This is the text from parent: &#123; parentText  &#125; </code>: \r\n                Using property to show case the value </p>\r\n\r\n                <br />\r\n                <h4 className=\"content-heading\"> Parent To Child: Using Class Component - Passing Complex Object/ Additional Children</h4>  \r\n                 \r\n                <textarea className=\"code-snippet-textarea\"  readOnly value={_p2NcUsingCCHtmlString} /> <br /> <br />\r\n\r\n\r\n\r\n\r\n                <h4 className=\"content-heading\"> Passing Data From Child To Parent </h4> \r\n                <p> 1. We need to create a callback function in the parent component. This callback function will get the data from the child component. </p> \r\n                <p> 2. Pass the callback function in the parent as a prop to the child component. </p> \r\n                <p> t3. The child component calls the parent callback function using props. </p> \r\n               \r\n                \r\n                <h5 className=\"content-heading\"> Code Snippet </h5>  \r\n                <div> \r\n                   <C2PParentClassComponent  />\r\n                </div> <br /> \r\n                <textarea className=\"code-snippet-textarea\"  readOnly value={_c2PUsingClassComponent} /> <br /> <br />  \r\n        \r\n                <h5 className=\"content-heading\"> Code Explanation </h5>  \r\n                <p> <span className=\"code-cursor\"> &#187; </span>  \r\n                <code>  parentCallBack= &#123; this.getDataFromChildCallBackFunction &#125;   </code>: \r\n                Creating CallBack function <code> getDataFromChildCallBackFunction </code> to receive the data from child component.\r\n                Also creating a property <code> parentCallBack </code> to send the data from child component.</p>\r\n                <p>   \r\n                <code> getDataFromChildCallBackFunction = (dtFromChild) =&#62; &#123; <br />\r\n                       &#47;&#47; update the state variable <br />\r\n                        this.setState(&#125;dataFromChild : dtFromChild &#125;);  &#125;  </code>: \r\n                Creating a body of the method <code>getDataFromChildCallBackFunction </code>. Simply assigning new value to the another property to display in parent component </p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>\r\n                <code> onClick=&#123;this.sendDataToParent&#125;   </code>: \r\n                Added a button in the child component and created it's event <code> </code> </p>\r\n\r\n                <p> <span className=\"code-cursor\"> &#187; </span>\r\n                <code>sendDataToParent = ()=&#62; &#125; <br />\r\n                &#47;&#47; assigning value to the call back function <br />\r\n                    this.props.parentCallBack(\"Sending data from child component\");  &#125;  </code>: \r\n                Body of the <code> sendDataToParent </code> method where we are setting a new text to the CallBack function. As soon as we will set the value,\r\n                this value will get assigned to the parent component.</p> \r\n                \r\n\r\n                <br />\r\n            </div>\r\n        )\r\n                return  _template ; \r\n    }\r\n}\r\n\r\n// Passing data from Parent to Child\r\n// ****************************************** 1. Function Component\r\n// Creating function component for parent and passing text to child function component\r\nfunction ParentFunctionComponent() {\r\n \r\n    const _parentTemplate = (\r\n       <div style={{'border':'1px solid purple', 'padding':'1rem'}}> \r\n           <h3> This is Parent Component</h3>\r\n           <ChildFunctionComponent parentText={\"This is the text from Parent Function Component\"} />\r\n       </div> \r\n    )\r\n    return _parentTemplate;\r\n}\r\n   \r\n// Creating function component for child and printing text from parent function component\r\nfunction ChildFunctionComponent({parentText}) {\r\n    const _childTemplate = ( \r\n        <div style={{'border':'1px solid orange', 'padding':'1rem'}}> \r\n            <h4> This is Child Component</h4>\r\n            <h5> Got this text from parent component: <strong> {parentText}  </strong></h5>\r\n        </div> \r\n    )\r\n   \r\n    return _childTemplate;\r\n}\r\n\r\n// ****************************************** 2. Class Component\r\n// Creating class component for parent and passing text to child class component\r\nclass ParentClassComponent extends Component{\r\n    render() {\r\n        const _parentTemplate = (\r\n        <div style={{'border':'1px solid purple', 'padding':'1rem'}}> \r\n            <h3> This is Parent Component</h3>\r\n            <ChildClassComponent parentText=\"This is the text from Parent Class Component\" >\r\n                {/* <strong> I am nested children </strong> */}\r\n            </ChildClassComponent>\r\n        </div> \r\n        )\r\n        return _parentTemplate;\r\n    }\r\n}\r\n   \r\n// Creating class component for child and printing text from parent class component\r\nclass ChildClassComponent extends Component {\r\n\r\n    render() {\r\n        const _childTemplate = ( \r\n            <div style={{'border':'1px solid orange', 'padding':'1rem'}}> \r\n                <h4> This is Child Component</h4>\r\n                <h5> Got this text from parent component: <strong> {this.props.parentText}  </strong></h5> \r\n                {/* <h5> Nested Child: <strong> {this.props.children}  </strong></h5> */}\r\n            </div> \r\n        )\r\n    \r\n        return _childTemplate;\r\n    }\r\n}\r\n\r\n\r\n\r\n// ****************************************** Child to Parent Component\r\n// Creating class component for parent and passing text to child class component\r\nclass C2PParentClassComponent extends Component{\r\n    // Let's create a variable to store the data from child component\r\n    state={\r\n        dataFromChild : \"Default text in parent component itself\"\r\n    }\r\n\r\n    // we have to create a call back function here such that we can retrieve data from child via that function\r\n    getDataFromChildCallBackFunction = (dtFromChild) => {\r\n        // update the state variable\r\n        this.setState({dataFromChild : dtFromChild});\r\n    }\r\n\r\n    render() {\r\n        const _parentTemplate = (\r\n        <div style={{'border':'1px solid purple', 'padding':'1rem'}}> \r\n            <h3> This is Parent Component</h3>\r\n            <C2PChildClassComponent \r\n            parentText=\"This is the text from Parent Class Component\" \r\n            parentCallBack={this.getDataFromChildCallBackFunction} /> <br/>\r\n            Data received from child component: <strong> {this.state.dataFromChild}</strong>\r\n        </div> \r\n        )\r\n        return _parentTemplate;\r\n    }\r\n}\r\n   \r\n// Creating class component for child and printing text from parent class component\r\nclass C2PChildClassComponent extends Component {\r\n\r\n    sendDataToParent = ()=>{\r\n        // assigning value to the call back function\r\n        this.props.parentCallBack(\"Sending data from child component\");\r\n    }\r\n\r\n    render() {\r\n        const _childTemplate = ( \r\n            <div style={{'border':'1px solid orange', 'padding':'1rem'}}>   \r\n                <h4> This is Child Component</h4>\r\n                <h5> Got this text from parent component: <strong> {this.props.parentText}  </strong></h5> \r\n                <button className=\"btn btn-primary\" onClick={this.sendDataToParent} > Send data to parent component</button> \r\n            </div> \r\n        )\r\n    \r\n        return _childTemplate;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport { PassingDataBetweenComponent  , ChildClassComponent }\r\n\r\n ","import {Component, React} from 'react';\r\nimport {ChildClassComponent} from './passingDataComponent';\r\n\r\nexport class HowReactWorksComponent extends Component{\r\n\r\n    state ={\r\n\r\n        msgToChild: \"This is the message to the child from parent\"\r\n    }\r\n\r\nrender(){\r\n\r\n    \r\n    return (\r\n    <div>\r\n         <h3> This is how react works page</h3>\r\n        <ChildClassComponent parentText=\"Text from another component\" />\r\n        <ChildClassComponent parentText={this.state.msgToChild}/>\r\n    </div>\r\n       \r\n        );\r\n}\r\n\r\n}","import { React} from 'react';\r\n\r\nfunction FunctionComponent(){\r\n\r\n const _htmlString = ( \r\n `      import { React } from 'react'; \r\n\r\n            function FunctionComponent() {\r\n                const _template = (\r\n                <div > This is code snippet for function component</div>\r\n                )\r\n                return _template;\r\n            }\r\n        export default FunctionComponent`\r\n )\r\n\r\n\r\nconst _template = (\r\n    <div> \r\n        <h4 className=\"content-heading\"> Function Component Code Snippet </h4> \r\n        <p> Function component is component which contains functions. The name should start from capital letter otherwise we can not use it as a react tag</p>\r\n\r\n        <h5 className=\"content-heading\"> Code Snippet </h5>  \r\n        <textarea className=\"code-snippet-textarea\"  readOnly value={_htmlString} /> <br /> <br /> \r\n\r\n        <h5 className=\"content-heading\"> Code Explanation </h5>  \r\n        <p> <span className=\"code-cursor\"> &#187; </span>  <code>  import &#123; React &#125;  from 'react';  </code>: We have to import this and this will help to render the dom.</p>\r\n        <p> <span className=\"code-cursor\"> &#187; </span>  <code>  function FunctionComponent() &#123; ..... &#125;   </code>: Function </p>\r\n        <p> <span className=\"code-cursor\"> &#187; </span>  <code>  const _template = ( ..... )  </code>: constant that is holding the html tag along with js</p>\r\n        <p> <span className=\"code-cursor\"> &#187; </span>  <code> export default FunctionComponent  </code>: Exporting</p>\r\n    </div>\r\n\r\n)\r\n     return  _template ; \r\n}\r\n\r\nexport default FunctionComponent\r\n\r\n ","import { Component, React} from 'react';\r\n\r\n\r\nclass ClassComponent extends Component{\r\n    render() {\r\n        const _htmlString = (\r\n`        import { Component, React } from 'react';\r\n        import logo from '../logo.svg';\r\n        \r\n        class ClassComponent extends Component {\r\n            render() {\r\n                const _template = ( <div > This is code snippet for class component</div> )\r\n                return _template;\r\n            }\r\n        }\r\n            `\r\n        )\r\n\r\n\r\nconst _template = (\r\n    <div> \r\n        <h4 className=\"content-heading\"> Class Component Code Snippet </h4> \r\n        <p> Class component is component which contains functions.</p>\r\n\r\n        <h5 className=\"content-heading\"> Code Snippet </h5>  \r\n        <textarea className=\"code-snippet-textarea\"  readOnly value={_htmlString} /> <br /> <br /> \r\n\r\n        <h5 className=\"content-heading\"> Code Explanation </h5>  \r\n        <p> <span className=\"code-cursor\"> &#187; </span>  <code>  import &#123; Component, React &#125;  from 'react';  </code>: We have to import this and this will help to render the dom.</p>\r\n        <p> <span className=\"code-cursor\"> &#187; </span>  <code>  class ClassComponent extends Component &#123; ..... &#125;   </code>: Function </p>\r\n        <p> <span className=\"code-cursor\"> &#187; </span>  <code>  const _template = ( ..... )  </code>: constant that is holding the html tag along with js</p>\r\n        <p> <span className=\"code-cursor\"> &#187; </span>  <code> export default ClassComponent  </code>: Exporting</p>\r\n    </div>\r\n\r\n)\r\n\r\n     return  _template ; \r\n}\r\n}\r\n\r\nexport default ClassComponent\r\n\r\n ","import { Component, React} from 'react';\r\n\r\n \r\n\r\nclass  StateAndPropsComponent extends Component {\r\n    \r\n    // added state property which will holds the data for this component\r\n    state = {\r\n        // adding below msg property which will store a text to display on UI\r\n         msg : 'This is the text from state property.'\r\n    }\r\n\r\n    render() { \r\n\r\n        const { msg } = this.state; // extracting msg property from state property to avoid writing long expression\r\n        const _stateHtmlString = ( \r\n`class  StateAndPropsComponent extends Component {\r\n\r\n    // added state property which will holds the data for this component\r\n    state = {\r\n    // adding below msg property which will store a text to display on UI\r\n    msg : 'This is the text from state property.'\r\n    }\r\n                    \r\n    // use of state property inside the template \r\n    render() {\r\n\r\n        const { msg } = this.state; // extracting msg property from state property to avoid writing long expression\r\n\r\n        const _template = ( \r\n            <p> Displaying text from state property: <span className=\"important-text\"> { this.state.msg } </span> </p> \r\n            <p> Alternate way to display the content of state property: <span className=\"important-text\"> { msg } </span> </p>\r\n        )\r\n        return _template;\r\n}\r\n `\r\n            )\r\n\r\n            const _propsHtmlString = ( \r\n`   // Passing a property to child component from parent component\r\n    <ChildComponent parentText=\"This is the text from parent\" />\r\n                \r\n                \r\n    // In the child component we can use the above property via props\r\n    <h2> Child Component showing text from parent: {this.props.parentText}</h2>\r\n`\r\n)\r\n                \r\n        \r\n        const _template = (\r\n            <div> \r\n                <h4 className=\"content-heading\"> What is state? </h4> \r\n                <p> state is a property which holds the data for its component and can change over time. We can assign an object to it \r\n                    and add multiple properties inside that. Let's see how it works: </p>\r\n                <p> Displaying text from state property: <span className=\"important-text\"> { this.state.msg } </span> </p>\r\n                <p> Alternate way to display the content of state property: <span className=\"important-text\"> { msg } </span> </p>\r\n        \r\n                <h5 className=\"content-heading\"> Code Snippet </h5>  \r\n                <textarea className=\"code-snippet-textarea\"  readOnly value={_stateHtmlString} /> <br /> <br /> \r\n        \r\n                <h5 className=\"content-heading\"> Code Explanation </h5>  \r\n                <p> <span className=\"code-cursor\"> &#187; </span>  <code>    state =  &#123; ...... &#125;   </code>: This is the declaration of state property inside the class. We can add n number of properties inside this state.\r\n                It helps to store any property-value which get used into the current component.</p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>  <code>   &#123; this.state.msg &#125;   </code>: This is one type of expression to read the value of any property from state property.  </p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>  <code>  const &#123; msg &#125;  = this.state;  </code>: An alternate way to extract the value of a property. \r\n                Create a constant with the same name of the property which is declared inside the state property and store the data into it.\r\n                To use of the const we can directly use like this: <code>  &#123; msg &#125;  </code> </p>\r\n\r\n                <br />\r\n                <h4 className=\"content-heading\"> What is props? </h4> \r\n                <p> Props are simple javaScript object. Props are read-only components. It is an object which stores the value of attributes of a tag and work similar to the HTML attributes.\r\n                    It allows passing data from one component to other components.</p> \r\n                <h5 className=\"content-heading\"> Code Snippet </h5>  \r\n                <textarea className=\"code-snippet-textarea\"  readOnly value={_propsHtmlString} /> <br /> <br /> \r\n\r\n\r\n                <h5 className=\"content-heading\"> Code Explanation </h5>  \r\n                <p> <span className=\"code-cursor\"> &#187; </span>  <code>  &#60;ChildComponent parentText=\"This is the text from parent\" /&#62;  </code>: We have to import this and this will help to render the dom.</p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>  <code>  Child Component showing text from parent:  &#123;this.props.parentText &#125;   </code>: Using property </p>\r\n            </div>\r\n        )\r\n                return  _template ; \r\n    }\r\n}\r\n\r\n\r\nexport { StateAndPropsComponent }\r\n ","\r\nexport const bestPracticeContent = [\r\n    \r\n    {\r\n        Heading: 'Naming Convention',\r\n        Description: 'Naming Convention should be according to the language.'\r\n    },\r\n\r\n    {\r\n        Heading: 'Comments',\r\n        Description: 'Give proper comment to the method/variable or anything which holds a meaning.'\r\n    },\r\n\r\n    {\r\n        Heading: 'Modularity',\r\n        Description: 'In the coding modilarity should be there.'\r\n    },\r\n\r\n    {\r\n        Heading: 'Simplification',\r\n        Description: 'Write simple and understandable code.'\r\n    }\r\n\r\n]\r\n\r\nexport const reactFundamentalsContent = [\r\n    \r\n    {\r\n        Heading: 'Fundamental 1',\r\n        Description: 'This is the description'\r\n    },\r\n\r\n    {\r\n        Heading: 'Fundamental 2',\r\n        Description: 'This is the description'\r\n    },\r\n\r\n    {\r\n        Heading: 'Fundamental 3',\r\n        Description: 'This is the description.'\r\n    },\r\n \r\n\r\n]\r\n\r\n","import {Component, React} from 'react';\r\nimport { bestPracticeContent } from '../assets/appDataContents';\r\n\r\nexport class BestCodingPracticesComponent extends Component {\r\n\r\n    render(){\r\n        \r\n         const _template = (\r\n\r\n            <div className=\"card-container row col-md-12\"> \r\n        \r\n                {/* here we have to assign key to uniquely identification of the tag */}\r\n                {bestPracticeContent.map(content => \r\n                <div className=\"card-div col-md-3\"  key={content.Heading}> \r\n                    <div className=\"card-heading\"> { content.Heading } </div> \r\n                    <div className=\"card-description\"> { content.Description }</div>\r\n                \r\n                </div>\r\n                )}\r\n            \r\n            </div>\r\n         )\r\n         \r\n         return _template;\r\n        \r\n    }\r\n}","import {Component, React} from 'react';\r\nimport { reactFundamentalsContent } from '../assets/appDataContents';\r\n\r\nexport class ReactFundamentalsComponent extends Component {\r\n\r\n    render(){\r\n        \r\n         const _template = (\r\n\r\n            <div className=\"card-container row col-md-12\"> \r\n        \r\n                {/* here we have to assign key to uniquely identification of the tag */}\r\n                {reactFundamentalsContent.map(content => \r\n                <div className=\"card-div col-md-3\"  key={content.Heading}> \r\n                    <div className=\"card-heading\"> { content.Heading } </div> \r\n                    <div className=\"card-description\"> { content.Description }</div>\r\n                \r\n                </div>\r\n                )}\r\n            \r\n            </div>\r\n         )\r\n         \r\n         return _template;\r\n        \r\n    }\r\n}","import {Component, React} from 'react'; \r\n\r\nexport class EventHandlingComponent extends Component{\r\n  \r\n    state = {\r\n        counter : 0,\r\n        buttonType: \"None of the\"\r\n    }\r\n\r\n    // below  method is not required if using arrow function\r\n    // constructor() {\r\n\r\n    //     super(); // We are calling this to use constructor\r\n    //   //  console.log(this)\r\n\r\n    //   // binding the method such that we can use 'this' keyword inside the body of 'IncrementCounter' method \r\n    //   this.IncrementCounter = this.IncrementCounter.bind(this);\r\n    // }\r\n\r\n    render(){\r\n\r\n        const _eventHandlingHtmlString_1 = (\r\n` // tag to display counter\r\n  <strong>Currently Counter is: </strong>  { this.formatCount() }  \r\n\r\n  // adding button for counter increment and decrement\r\n  <button className=\"btn btn-primary form-control\" type=\"button\" onClick={this.IncrementCounter}> Increment</button> \r\n  <button className=\"btn btn-danger form-control\" type=\"button\" onClick={ () => {this.setState({counter : this.state.counter - 1})}}> Decrement</button>\r\n               \r\n  // Adding arrow function for Increasing counter value. By this arrow function we can avoid binding in constructor\r\n  IncrementCounter = () => {\r\n  // we have to tell the react that something got changed such that react can update the dom  \r\n  this.setState({counter : this.state.counter + 1}); \r\n  }\r\n\r\n  // Adding the another func to format the counter value\r\n  formatCount() {\r\n    const { counter } = this.state; // taking out the value of counter from state object and saving into another constant\r\n    return counter === 0 ? <span className=\"text-warning fs3rem\">  Zero  </span>: counter > 0 ? <span className=\"text-success fs3rem\"> {counter} </span> : <span className=\"text-danger fs3rem\">{counter} </span> ;\r\n}\r\n`\r\n)\r\n\r\n        return (\r\n            <div> \r\n                <h4 className=\"content-heading\"> Event Handling </h4> \r\n                    <p> Event handling is an event to handle the action. An Action could be anything such as user clicked on a button, mouse-hover,\r\n                        mouse-focus etc. </p>\r\n                <h5 className=\"content-heading\"> Sample Example - 1 </h5>\r\n                <p>Below example is for simple implementation of events. We are trying to understand how to handle events.</p> \r\n                <div className=\"row col-md-12\">\r\n                    <div className=\"col-md-3 form-group pd10\"> \r\n                        <strong>Currently Counter is: </strong> <br /> { this.formatCount() }  \r\n                        <br/>  <br/>\r\n                        <button className=\"btn btn-primary form-control\" type=\"button\" onClick={this.IncrementCounter}> Increment</button> \r\n                        <br/> <br/>\r\n                        <button className=\"btn btn-danger  form-control\" type=\"button\" onClick={ () => {this.setState({counter : this.state.counter - 1})}}> Decrement</button>\r\n                    </div> \r\n\r\n                    <div className=\"col-md-9 form-group pd10\"> \r\n                        <textarea className=\"code-snippet-textarea\"  readOnly value={_eventHandlingHtmlString_1} /> <br /> <br /> \r\n                    </div> \r\n                </div>\r\n                \r\n                <h5 className=\"content-heading\"> Code Explanation </h5> \r\n                <p> <span className=\"code-cursor\"> &#187; </span>   <code>  &#123; this.formatCount()  &#125;   </code>: An expression which calls custom method to get the count along with some custom formatting.</p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>    <code>  onClick=&#123; this.IncrementCounter &#125;   </code>: A click event of a button which calls non-parameterized method  'IncrementCounter' </p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>    <code>  IncrementCounter = () = &#62; &#123; \r\n                            this.setState(&#123; counter : this.state.counter + 1 &#125;); &#125;  </code>: This is the body of the 'IncrementCounter' method which will increase the counter.\r\n                            Here we have used 'Arrow function' <code> () = &#62; &#123; ...... &#125;</code> concept. By using this no need to bind the <code>'this'  </code> object with the method. Means in React we can not use 'this' object directly.\r\n                            Hence to use it we have to bind it inside the 'constructor' like below: <br/>\r\n                            <code> constructor() &#123;  <br/>\r\n                            &#47;&#47; binding the method such that we can use 'this' keyword inside the body of 'IncrementCounter' method  <br/>\r\n                                    this.IncrementCounter = this.IncrementCounter.bind(this);  <br/>\r\n                                     &#125;  </code>\r\n                            if we don't do this, we will not be able to access 'this' it will simply throw 'undefined' error.  </p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>\r\n                <strong> Inside <code> 'IncrementCounter' </code>  method why not simply doing this  </strong> <code>this.state.counter + 1  </code>   instead of \r\n                <code> this.setState(&#123; counter : this.state.counter + 1 &#125;); &#125;  </code> ?:\r\n                 Okay so, this is because React is a JavaScript not a template engine. So we have to tell the React that something got changed so update the DOM. </p>\r\n\r\n\r\n                 <p> <span className=\"code-cursor\"> &#187; </span> <code> this.setState( .... ) </code> : 'setState' method will set the new value to the objects. By doing this React understands that current DOM requires some update.\r\n                 Hence as a result it compares the Current Vs New DOM and updates only required part not the full DOM.</p>\r\n\r\n                <br />\r\n                 <h5 className=\"content-heading\"> Sample Example - 2</h5>\r\n                 <p>In this example we will see how we can pass the value to the event function. Like passing some id/text to the handling method.</p> \r\n            \r\n                 <div className=\"row col-md-12\">\r\n                    <div className=\"col-md-12  pd10\"> \r\n                        <strong>List of Buttons:</strong> <br />  \r\n                         \r\n                        <button className=\"btn btn-primary\" type=\"button\" onClick={() => this.printButtonType(\"Primary\")}> Primary Button</button> \r\n                        &nbsp;&nbsp;\r\n                        <button className=\"btn btn-warning\" type=\"button\" onClick={() => this.printButtonType(\"Warning\")}> Warning Button</button> \r\n                        &nbsp;&nbsp;\r\n                        <button className=\"btn btn-success\" type=\"button\" onClick={() => this.printButtonType(\"Success\")}> Success Button</button> \r\n                        &nbsp;&nbsp;\r\n                        <button className=\"btn btn-danger\" type=\"button\" onClick={() => this.printButtonType(\"Danger\")}> Danger Button</button> \r\n                        &nbsp;&nbsp;\r\n                        <button className=\"btn btn-info\" type=\"button\" onClick={() => this.printButtonType(\"Info\")}> Info Button</button> \r\n                        &nbsp;&nbsp;\r\n                        <button className=\"btn btn-dark\" type=\"button\" onClick={() => this.printButtonType(\"Dark\")}> Dark Button</button> \r\n                        &nbsp;&nbsp;\r\n                        <button className=\"btn btn-light\" type=\"button\" onClick={() => this.printButtonType(\"Light\")}> Light Button</button> \r\n                        &nbsp;&nbsp;\r\n                        <button className=\"btn btn-link\" type=\"button\" onClick={() => this.printButtonType(\"Link\")}> Link Button</button> \r\n\r\n                    </div> \r\n                    <div className=\"col-md-12 form-group pd10\" style={{'fontSize':'1.3rem'}}> \r\n                        <span> You have clicked </span> : <strong> {this.state.buttonType + \" Button\"} </strong> \r\n                    </div>\r\n                    \r\n                    <div className=\"col-md-12 form-group pd10\"> \r\n                        <p>  <span className=\"code-cursor\"> &#187; </span>   The only change in the code would be related to event calling function: \r\n                            <code>  onClick=&#123;() =&#62; this.printButtonType(\"Primary\")&#125; </code>.\r\n                            Here we are passing \"Primary\" as a parameter to the <code> printButtonType </code> function. \r\n                            Same as for the other buttons we are passing different text as per the \"BootStrap CSS\" type.\r\n                        </p>\r\n\r\n                        <p> <span className=\"code-cursor\"> &#187; </span>  Nothing much in the body of function. It will look like this <br />\r\n                            <code>  printButtonType = (_buttonType) =&#62; &#123; <br />\r\n                            this.setState(&#123;buttonType : _buttonType&#125;);  &#125;\r\n                            </code>.\r\n                            Simply created a parameterized function and setting the new value to one of the state variable.\r\n                        </p>\r\n\r\n                        \r\n        \r\n    \r\n\r\n                    </div> \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // IncrementCounter(){\r\n    //     alert('IncrementCounter Clicked');\r\n    //         console.log(this);\r\n    //     // we can not use directly this.state.counter and we can not increase the counter simply\r\n    //     // Because this is undefined here in this method. to use this we have to bind it on constructor\r\n\r\n    //     // to avoid the binding we have to use arrow function because it don't rebind it instead it inherited it\r\n    // }\r\n\r\n    // Arrow function\r\n    IncrementCounter = () => {\r\n        this.setState({counter : this.state.counter + 1}); // we have to tell the react that something got changed such that react can update the dom  \r\n    }\r\n\r\n    // Arrow function\r\n   DecrementCounter = () => {\r\n        this.setState({counter : this.state.counter - 1}); // we have to tell the react that something got changed such that react can update the dom  \r\n    }\r\n\r\n    // Adding the another func to format the counter value\r\n    formatCount() {\r\n        const { counter } = this.state;\r\n        return counter === 0 ? <span className=\"text-warning fs3rem\">  Zero  </span>: counter > 0 ? <span className=\"text-success fs3rem\"> {counter} </span> : <span className=\"text-danger fs3rem\">{counter} </span> ;\r\n    }\r\n\r\n    // Adding a method to print the button type\r\n    printButtonType = (_buttonType) => {\r\n        this.setState({buttonType : _buttonType});\r\n    }\r\n}","import {Component, React} from 'react';\r\n\r\n// import the json data from json file\r\nimport  FeedBackData from '../assets/feedbackData.json';\r\n\r\nexport class FeedBackComponent extends Component{\r\n  \r\n    render(){\r\n        const _template = (\r\n            <div className=\"feedback-container\"> \r\n               <center> <h2> <u> Thank you so much for your feedback </u> </h2><br /> </center> \r\n                {/* here we have to assign key to uniquely identification of the tag */}\r\n                {FeedBackData.feedbackData.map(feedData => \r\n                <div className=\"feedback-div row col-md-12\"  key={ feedData.feedbackCount}> \r\n                    <div className=\"col-md-2 feedback-heading\"> {feedData.userName} </div>  \r\n                    <div className=\"col-md-10 feedback-description\"> {feedData.userFeedback}</div>\r\n                </div>\r\n                )}\r\n            </div>\r\n         )\r\n         return _template;\r\n    }\r\n}","import {Component, React} from 'react'; \r\n\r\n\r\nexport class JSXComponent extends Component{\r\n  \r\n    render(){\r\n        return (\r\n\r\n        <div> \r\n             <h4 className=\"content-heading\"> What is JSX? </h4> \r\n                <p> JSX is JSX  </p> \r\n        \r\n                <h5 className=\"content-heading\"> Code Snippet </h5>  \r\n                <textarea className=\"code-snippet-textarea\"  readOnly value={\"\"} /> <br /> <br /> \r\n        \r\n                <h5 className=\"content-heading\"> Code Explanation </h5>  \r\n                <p> <span className=\"code-cursor\"> &#187; </span>  <code>    state =  &#123; ...... &#125;   </code>: This is the declaration of state property inside the class. We can add n number of properties inside this state.\r\n                It helps to store any property-value which get used into the current component.</p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>  <code>   &#123; this.state.msg &#125;   </code>: This is one type of expression to read the value of any property from state property.  </p>\r\n                <p> <span className=\"code-cursor\"> &#187; </span>  <code>  const &#123; msg &#125;  = this.state;  </code>: An alternate way to extract the value of a property. \r\n                Create a constant with the same name of the property which is declared inside the state property and store the data into it.\r\n                To use of the const we can directly use like this: <code>  &#123; msg &#125;  </code> </p>\r\n                <br />\r\n                <br />\r\n                <br />\r\n \r\n        </div>\r\n        );\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/helloWorld_Code.cd372c46.png\";","export default __webpack_public_path__ + \"static/media/helloWorld_UI.02192103.png\";","export default __webpack_public_path__ + \"static/media/custom-app.461ba2c7.zip\";","import {Component, React} from 'react';\r\n\r\nimport helloWorld_Code from '../assets/images/helloWorld_Code.png';\r\nimport helloWorld_UI from '../assets/images/helloWorld_UI.png';\r\nimport customApp from '../assets/downloadFiles/custom-app.zip';\r\n\r\n\r\nexport class HelloWorldComponent extends Component {\r\n\r\nrender() {\r\n\r\n    return(\r\n\r\n    <div>\r\n        <h4 className=\"content-heading\"> Hello World Application </h4> \r\n        <p> We can not start anything without legendary <code> Hello World</code> application. So here we are;\r\n        A simple React application requires majorly below elements:   <br />  \r\n        <span className=\"code-cursor\"> &#187; </span>  One <code> .js </code> file which will contain the basic <code> React Component </code>which will help to render the data. <br />\r\n        <span className=\"code-cursor\"> &#187; </span>  Another elements is <code> .html </code> file which will contain the basic html elements along with that a place where we do render the <code> React Component</code>.\r\n        </p>  <br />\r\n\r\n        <div><strong> Below is the example of basic <code>Hello World Application</code></strong> <br />\r\n        Here we just need only two files <code> index.js </code> and  <code> index.html </code> <br/>  \r\n        <span className=\"code-cursor\"> &#187; </span>   <code> index.html :</code> In this file we are having are metadata and one <code> div </code> with id=\"root\"; we need this to render our content in it. <br />\r\n        <span className=\"code-cursor\"> &#187; </span>  <code> index.js :</code> In this file we are having basic structure of <code> React Elements</code>. Elaborating further:\r\n                    <ul> \r\n                        <li>\r\n                            We are importing <code> React </code> from 'react' package such that we can make this as  <code> React Compatible</code>\r\n                        </li>\r\n                        <li>\r\n                            Importing <code> ReactDom </code> from 'react-dom' will help to create a <code> Document Object Model</code> which helps to render the content. \r\n                        </li>\r\n                        <li>\r\n                            Creating a constant with name <code> element </code> and assigning <code>  html content </code> along with <code> JavaScript elements</code>; called <code>JSX</code>.\r\n                        </li>\r\n                        <li>\r\n                            Finally calling <code> ReactDOM.render() </code> method to tell the React that we want to render the passed <code> element </code> inside passed <code> elementId (\"root\") </code>.\r\n                            As a result React will create a DOM for the passed parameters and display the content on browser. (Refer second screenshot)\r\n                        </li>\r\n                    </ul>\r\n        </div>\r\n        <div className=\"helloWorldPage\"> \r\n        <div> \r\n            <img src={helloWorld_Code} alt=\"Hello World Code\" /> \r\n        </div>\r\n        \r\n        <p><strong> Below is the UI of above code along with the inspection there we can see how DOM looks like:</strong> <br /> </p>\r\n        <p> You can download the sample code from here:  &nbsp; \r\n        <a href={customApp} target=\"_blank\" rel=\"noreferrer\" download> \r\n            <i className=\"bi bi-download\" /> \r\n        </a>  <br />\r\n        <small>  (Kindly run <code>npm install</code> first to install all packages and then <code> npm start</code> to view the app on browser)  </small>\r\n        </p>\r\n\r\n\r\n        <div>  \r\n            <img src={helloWorld_UI} alt=\"Hello World UI\" /> \r\n        </div> \r\n        </div>\r\n    </div> \r\n\r\n\r\n    ); \r\n }\r\n}\r\n","import React from 'react';\r\n\r\nexport class ReactLifecycleComponent extends React.Component{\r\n\r\n    render(){\r\n\r\n        const _template = (\r\n            <div>\r\n                <h4 className=\"content-heading\"> React Lifecycle </h4> \r\n                <p>\r\n                    We know that React is all about <code> Components</code>  hence we have to look towards it's lifecycle as well.   \r\n                    Lifecycle means some set of events/functions in which each and every <code> React Component</code>   goes through.   <br />\r\n                    There are few events which gets called during lifecycle of a <code> React Component</code>. \r\n                    Basically we can categorize lifecycle methods into three phases such as:  <br />\r\n                    <span className=\"code-cursor\"> &#187; </span><span className=\"theme-color-text\"> Mounting </span>   <br />\r\n                    <span className=\"code-cursor\"> &#187; </span><span className=\"theme-color-text\"> Updating </span>   <br />\r\n                    <span className=\"code-cursor\"> &#187; </span><span className=\"theme-color-text\"> UnMounting </span> \r\n                </p>\r\n                \r\n                <br />\r\n                <h5 className=\"theme-color-text\"> <b> Mounting </b>  </h5> \r\n                <p> Mounting means putting elements into the DOM. \r\n                    React has four built-in methods that gets called, in this order, when mounting a component: </p> \r\n                <p> \r\n                    <span className=\"code-cursor\"> &#187; </span> \r\n                    <code> constructor() </code>: The constructor() method is called before anything else, when the component is initiated, and it is the natural place to set up the initial state and other initial values.\r\n                    <br />\r\n                    <span className=\"code-cursor\"> &#187; </span> \r\n                    <code> getDerivedStateFromProps() </code>: \r\n                    <br />\r\n                    <span className=\"code-cursor\"> &#187; </span> \r\n                    <code> render() </code>: \r\n                    <br />\r\n                    <span className=\"code-cursor\"> &#187; </span> \r\n                    <code> componentDidMount() </code>: \r\n                </p>\r\n\r\n                <br />\r\n                <h5 className=\"theme-color-text\"> <b>  Updating </b></h5> \r\n                <p>  </p> \r\n                <p> \r\n                    <span className=\"code-cursor\"> &#187; </span> \r\n                    <code> getDerivedStateFromProps() </code>: \r\n                    <br />\r\n                    <span className=\"code-cursor\"> &#187; </span> \r\n                    <code> shouldComponentUpdate() </code>: \r\n                    <br />\r\n                    <span className=\"code-cursor\"> &#187; </span> \r\n                    <code> render() </code>: \r\n                    <br />\r\n                    <span className=\"code-cursor\"> &#187; </span> \r\n                    <code> getSnapshotBeforeUpdate() </code>: \r\n                    <br />\r\n                    <span className=\"code-cursor\"> &#187; </span> \r\n                    <code> componentDidUpdate() </code>: \r\n\r\n                </p>\r\n\r\n                <br />\r\n                <h5 className=\"theme-color-text\"> <b> UnMounting </b> </h5> \r\n                <p>  </p> \r\n                <p> \r\n                    <span className=\"code-cursor\"> &#187; </span> \r\n                    <code> componentWillUnmount() </code>: \r\n                    <br />\r\n                </p>\r\n\r\n            </div>\r\n\r\n        );\r\n\r\n\r\n        return _template;\r\n    }\r\n\r\n}","import {HashRouter as Router, Switch, Route} from 'react-router-dom';\r\n// importing constant file to read the links\r\nimport * as appConsts from './assets/appConstants';\r\n\r\n// Importing Component\r\nimport {HomeComponent} from './components/homeComponent';\r\nimport {FolderAndFileDetailsComponent} from './components/folderAndFileDetailsComponent';\r\nimport {HowReactWorksComponent} from './components/howReactWorksComponent';\r\nimport FunctionComponent  from './components/functionComponent';\r\nimport ClassComponent  from './components/classComponent';\r\nimport { StateAndPropsComponent } from './components/stateAndPropsComponent';\r\nimport { BestCodingPracticesComponent } from './components/bestCodingPracticesComponent';\r\nimport { ReactFundamentalsComponent } from './components/reactFundamentalsComponent';\r\nimport { EventHandlingComponent } from './components/eventHandlingComponent';\r\nimport { PassingDataBetweenComponent } from './components/passingDataComponent';\r\nimport { FeedBackComponent } from './components/feedbackComponent';\r\nimport { JSXComponent } from './components/jsxComponent';\r\nimport { HelloWorldComponent } from './components/helloWorldComponent';\r\nimport { ReactLifecycleComponent } from './components/reactLifecycleComponent';\r\n\r\nexport const AppRoute= () => {\r\n    return (\r\n        <Router>\r\n            <Switch> \r\n              <Route exact path='/' component={HomeComponent} /> \r\n              <Route path={appConsts.routeLinks.FolderAndFileDetails} component={FolderAndFileDetailsComponent} /> \r\n              <Route path={appConsts.routeLinks.HowReactWorks} component={HowReactWorksComponent} /> \r\n              <Route path={appConsts.routeLinks.FunctionComponent} component={FunctionComponent} /> \r\n              <Route path={appConsts.routeLinks.ClassComponent} component={ClassComponent} /> \r\n              <Route path={appConsts.routeLinks.StateAndProps} component={StateAndPropsComponent} /> \r\n              <Route path={appConsts.routeLinks.BestCodingPractices} component={BestCodingPracticesComponent} />\r\n              <Route path={appConsts.routeLinks.ReactFundamentals} component={ReactFundamentalsComponent} />\r\n              <Route path={appConsts.routeLinks.EventHandling} component={EventHandlingComponent} />\r\n              <Route path={appConsts.routeLinks.PassingDataBetweenComponents} component={PassingDataBetweenComponent} />\r\n              <Route path={appConsts.routeLinks.FeedBack} component={FeedBackComponent} /> \r\n              <Route path={appConsts.routeLinks.JSX} component={JSXComponent} />   \r\n              <Route path={appConsts.routeLinks.HelloWorld} component={HelloWorldComponent} />   \r\n              <Route path={appConsts.routeLinks.ReactLifecycle} component={ReactLifecycleComponent} />  \r\n          </Switch>\r\n        </Router>\r\n    );\r\n}","import React from 'react';\r\nimport {HashRouter as Router, NavLink } from 'react-router-dom';\r\nimport * as appConsts from '../assets/appConstants';\r\n\r\nexport default function AppMenuComponent(){\r\n\r\n const _template = (\r\n    <Router> \r\n        <ul>\r\n            <li><NavLink exact to=\"/\" activeClassName=\"menu-list-a-active\" > What is ReactJs? </NavLink></li> \r\n            <li><NavLink exact to={appConsts.routeLinks.FolderAndFileDetails}  activeClassName=\"menu-list-a-active\" > Folder/File Structure</NavLink></li>\r\n            <li><NavLink exact to={appConsts.routeLinks.HowReactWorks}   activeClassName=\"menu-list-a-active\" >How React works?</NavLink></li>\r\n            <li><NavLink exact to={appConsts.routeLinks.JSX}    activeClassName=\"menu-list-a-active\" > What is JSX? </NavLink></li> \r\n            <li><NavLink exact to={appConsts.routeLinks.HelloWorld}   activeClassName=\"menu-list-a-active\" > Legendary 'Hello World' Program</NavLink></li>\r\n            <li><NavLink exact to={appConsts.routeLinks.ReactFundamentals}   activeClassName=\"menu-list-a-active\" > React Terminology and Fundamentals</NavLink></li>\r\n            <li><NavLink exact to={appConsts.routeLinks.BestCodingPractices}  activeClassName=\"menu-list-a-active\" > Best Coding Practices</NavLink></li>\r\n            <li><NavLink exact to={appConsts.routeLinks.FunctionComponent}  activeClassName=\"menu-list-a-active\" >Function Component</NavLink></li>\r\n            <li><NavLink exact to={appConsts.routeLinks.ClassComponent}   activeClassName=\"menu-list-a-active\" >Class Component</NavLink></li>\r\n            <li><NavLink exact to={appConsts.routeLinks.ReactLifecycle}   activeClassName=\"menu-list-a-active\" >React Lifecycle</NavLink></li>\r\n            <li><NavLink exact to={appConsts.routeLinks.StateAndProps}    activeClassName=\"menu-list-a-active\" >State and Props</NavLink></li>\r\n            <li><NavLink exact to={appConsts.routeLinks.EventHandling}   activeClassName=\"menu-list-a-active\" >Event Handling</NavLink></li>\r\n            <li><NavLink exact to={appConsts.routeLinks.PassingDataBetweenComponents}    activeClassName=\"menu-list-a-active\" >Passing Data Between Components</NavLink></li>\r\n            <li><NavLink exact to={'/'}  activeClassName=\"menu-list-a-active\" >Conditions/Loops</NavLink></li>\r\n            <li><NavLink exact to={'/'}   activeClassName=\"menu-list-a-active\" >Routing</NavLink></li>\r\n            <li><NavLink exact to={'/'}   activeClassName=\"menu-list-a-active\" >Forms</NavLink></li>\r\n            <li><NavLink exact to={'/'}   activeClassName=\"menu-list-a-active\" >API</NavLink></li>\r\n            <li><NavLink exact to={appConsts.routeLinks.FeedBack}   activeClassName=\"menu-list-a-active\" >Feedback</NavLink></li> \r\n        </ul>\r\n    </Router>\r\n )\r\n\r\n return _template;\r\n\r\n}","import { React, Component} from 'react';\r\nimport buildInfo from '../assets/buildInfo.json'; \r\n\r\nclass AppFooterComponent extends Component{\r\n\r\n    render() {\r\n        const _template = (\r\n        <div>\r\n            <footer className=\"App-footer\">\r\n                \r\n            <div className=\"row col-md-12\">\r\n                    <div  className=\"col-md-5\">\r\n                    <br />\r\n                        <span className=\"footer-subheading\">   Pleased to listen from you </span> \r\n                        <input type=\"text\" className=\"feedback-inputBox\" placeholder=\"Please write your good name\" maxLength=\"25\" />\r\n                        <textarea className=\"feedback-textarea\" placeholder=\"Please share your feedback\" maxLength=\"350\"   />   \r\n                        \r\n                    </div>\r\n                    <div  className=\"col-md-1 feedback-sendBtnContainer\">  \r\n                    <div onClick={this.getFeedback}  className=\"feedback-sendBtn1\"> \r\n                            <div className=\"feedback-sendBtn2\"> \r\n                            </div>\r\n                        </div> \r\n                    </div> \r\n                \r\n                    <div  className=\"row col-md-6\">\r\n                    <div className=\"col-md-6 otherStreet\"> \r\n                    <br />\r\n                    <span className=\"footer-subheading\">   Other Streets </span> \r\n\r\n                    <ul>\r\n                        <li>\r\n                            <a  href=\"https://learningstreets.github.io/ReactJsStreet\" target=\"_blank\" rel=\"noreferrer\">\r\n                            ReactJs Street\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a  href=\"https://learningstreets.github.io/ReactJsStreet\" target=\"_blank\" rel=\"noreferrer\">\r\n                            Angular Street\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a  href=\"https://learningstreets.github.io/ReactJsStreet\" target=\"_blank\" rel=\"noreferrer\">\r\n                            Dot Net Core Street\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a  href=\"https://learningstreets.github.io/ReactJsStreet\" target=\"_blank\" rel=\"noreferrer\">\r\n                            Python Street\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"https://learningstreets.github.io/ReactJsStreet\" target=\"_blank\" rel=\"noreferrer\">\r\n                            Java Street\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"https://learningstreets.github.io/ReactJsStreet\" target=\"_blank\" rel=\"noreferrer\">\r\n                            C# Street\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                    \r\n                    </div>\r\n                    <div className=\"col-md-6 contactUs\"> \r\n                    <br />\r\n                    <span  className=\"footer-subheading\">   Contact Us </span> \r\n\r\n                    <ul>\r\n                        <li>\r\n                            +91-90xxxxxxx\r\n                        </li>\r\n                        <li>\r\n                            streetsxxxxx@gmail.com\r\n                        </li>\r\n                    </ul>\r\n                    </div>\r\n                </div> \r\n                </div> \r\n                <div className=\"col-md-12 footer-getCode\" > \r\n                    <a className=\"sourceCode-button\" href=\"https://github.com/LearningStreets/ReactJsStreet/tree/main\" target=\"_blank\" rel=\"noreferrer\">\r\n                        Get the source code &#60;/&#62;  \r\n                    </a> \r\n                    <br /> <br />\r\n                    <small className=\"footer-buildVersion\"> App Version:  {buildInfo.buildMajor +'.' + buildInfo.buildMinor +'.' + buildInfo.buildRevision +'  | '+ buildInfo.buildTag }</small>\r\n                </div> \r\n            </footer>\r\n        </div>\r\n        )\r\n\r\n        return _template;\r\n    }\r\n\r\n\r\n    \r\n\r\n   getFeedback = () => {\r\n\r\n    \r\n   // AddFeedback(\"Method\", \"By Method\");\r\n \r\n    //const editJsonFile = require(\"edit-json-file\");\r\n    // If the file doesn't exist, the content will be an empty object by default.\r\n    //let file = editJsonFile('../assets/feedbackData.json');\r\n\r\n    //var fs = require('browserify-fs');\r\n   // fs.readFile('../assets/feedbackData.json');\r\n\r\n    //You can even append objects\r\n    //file.append(\"feedbackData\", { userName: \"From Form\", userFeedback: \"Good\" });\r\n    //console.log(fs);\r\n\r\n    //if you want to remove the last element from an array use pop\r\n    //file.pop(\"classes\")\r\n    // Save the data to the disk\r\n    //file.save();\r\n    // Output the whole thing\r\n    //console.log(file.toObject());\r\n\r\n }\r\n}\r\n\r\n\r\n\r\nexport default AppFooterComponent\r\n\r\n ","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {Component, React} from 'react';\r\nimport logo from '../logo.svg';\r\n// importing app name from constant file\r\nimport { AppName }  from '../assets/appConstants';\r\n\r\nexport class AppHeaderComponent extends Component{\r\n  \r\n\r\n    // --theme-color: purple;\r\n    // --header-footer-bg-color: #282c34;\r\n    // --card-bg-color: rgba(128, 0, 128, 0.25);\r\n    // --card-border-color: rgba(128, 0, 128, 0.8); \r\n\r\n\r\n    state={\r\n        themePurple: 'purple',\r\n        themePurple_card_bgc: 'rgba(128, 0, 128, 0.2)',\r\n        themePurple_card_bc: 'rgba(128, 0, 128, 0.2)',\r\n        themeGreen: 'green',\r\n        themeGreen_card_bgc: 'rgba(0, 128, 0, 0.2)',\r\n        themeGreen_card_bc: 'rgba(0, 128, 0, 0.8)',\r\n        themeOrangeRed: 'orangered',\r\n        themeOrangeRed_card_bgc: 'rgba(255, 68, 0, 0.2)',\r\n        themeOrangeRed_card_bc: 'rgba(255, 68, 0, 0.8)',\r\n        themeHotPink: '#e83e8c',\r\n        themeHotPink_card_bgc: '#e83e8d38',\r\n        themeHotPink_card_bc: '#e83e8dcc'\r\n    }\r\n\r\n\r\n    setTheme = (event, _theme) => {\r\n       // console.log(event.target); \r\n        document.documentElement.style.setProperty('--theme-color',  this.state[_theme]);\r\n        document.documentElement.style.setProperty('--card-bg-color',  this.state[_theme + \"_card_bgc\"]);\r\n        document.documentElement.style.setProperty('--card-border-color',  this.state[_theme + \"_card_bc\"]);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <div> \r\n            <div className=\"App-header\">\r\n            <img src={logo} width=\"100\" className=\"App-logo\" alt=\"logo\" />  \r\n            </div>\r\n\r\n            <div className=\"App-heading\">\r\n             {AppName} \r\n            </div>\r\n\r\n            <div className=\"App-theme-btn-div\">  \r\n                <span style={{'backgroundColor': this.state.themePurple}} onClick={(event)=> this.setTheme(event, \"themePurple\")} />\r\n                <span style={{'backgroundColor': this.state.themeGreen}} onClick={(event)=> this.setTheme(event, \"themeGreen\")} />\r\n                <span style={{'backgroundColor': this.state.themeHotPink}} onClick={(event)=> this.setTheme(event, \"themeHotPink\")} />\r\n                <span style={{'backgroundColor': this.state.themeOrangeRed}} onClick={(event)=> this.setTheme(event, \"themeOrangeRed\")} />\r\n            </div>\r\n\r\n        </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport {AppRoute} from './Route';\n\nimport AppMenuComponent from './components/appMenuComponent';\nimport AppFooterComponent from './components/appFooterComponent';\nimport {AppHeaderComponent} from './components/appHeaderComponent';\n\n\n\nclass App extends Component{\n\n  render() \n  {\n    return (\n        <div className=\"App\">\n\n          {/* displaying app header */}\n          <AppHeaderComponent />\n\n          {/* with the help of bootstrap css dividing the content into columns */}\n          <div className=\"row col-md-12\">\n            <div className=\"menu-list col-md-2\">\n                {/* displaying app menu */}\n                <AppMenuComponent />\n            </div>\n\n            <div className=\"col-md-10\">\n              <div className=\"router-container\"> \n                {/* here the content of other page will get displayed */}\n                <AppRoute />\n              </div>\n            </div>\n          </div>\n\n          {/* displaying app footer */}\n          <AppFooterComponent /> \n\n        </div>\n      ); \n  }\n}\n export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root') \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}